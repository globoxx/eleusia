{"ast":null,"code":"import _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Dilation2DProgram = /*#__PURE__*/_createClass(function Dilation2DProgram(convInfo) {\n  _classCallCheck(this, Dilation2DProgram);\n  this.variableNames = ['x', 'W'];\n  this.outputShape = convInfo.outShape;\n  var inHeight = convInfo.inHeight,\n    inWidth = convInfo.inWidth,\n    padInfo = convInfo.padInfo,\n    strideHeight = convInfo.strideHeight,\n    strideWidth = convInfo.strideWidth,\n    filterHeight = convInfo.filterHeight,\n    filterWidth = convInfo.filterWidth,\n    dilationHeight = convInfo.dilationHeight,\n    dilationWidth = convInfo.dilationWidth;\n  var padTop = padInfo.top,\n    padLeft = padInfo.left;\n  this.userCode = \"\\n      const ivec2 strides = ivec2(\".concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n      const float neg_infinity = -3.4e38;\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.w;\\n        ivec2 outTopLeftCorner =\\n            coords.yz * strides - pads;\\n        int hBeg = outTopLeftCorner.x;\\n        int wBeg = outTopLeftCorner.y;\\n\\n        float curVal = neg_infinity;\\n        for (int h = 0; h < \").concat(filterHeight, \"; h++) {\\n          int hIn = hBeg + h * \").concat(dilationHeight, \";\\n\\n          if (hIn >= 0 && hIn < \").concat(inHeight, \") {\\n            for (int w = 0; w < \").concat(filterWidth, \"; w++) {\\n              int wIn = wBeg + w * \").concat(dilationWidth, \";\\n\\n              if (wIn >= 0 && wIn < \").concat(inWidth, \") {\\n                float xVal = getX(batch, hIn, wIn, d1);\\n                float wVal = getW(h, w, d1);\\n\\n                float val = xVal + wVal;\\n                if (val > curVal) {\\n                  curVal = val;\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        float result = curVal;\\n        setOutput(result);\\n      }\\n    \");\n});","map":{"version":3,"names":["Dilation2DProgram","_createClass","convInfo","_classCallCheck","variableNames","outputShape","outShape","inHeight","inWidth","padInfo","strideHeight","strideWidth","filterHeight","filterWidth","dilationHeight","dilationWidth","padTop","top","padLeft","left","userCode","concat"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\dilation_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Dilation2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.outShape;\n\n    const {\n      inHeight,\n      inWidth,\n      padInfo,\n      strideHeight,\n      strideWidth,\n      filterHeight,\n      filterWidth,\n      dilationHeight,\n      dilationWidth\n    } = convInfo;\n\n    const {top: padTop, left: padLeft} = padInfo;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${filterHeight}; h++) {\n          int hIn = hBeg + h * ${dilationHeight};\n\n          if (hIn >= 0 && hIn < ${inHeight}) {\n            for (int w = 0; w < ${filterWidth}; w++) {\n              int wIn = wBeg + w * ${dilationWidth};\n\n              if (wIn >= 0 && wIn < ${inWidth}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAoBA,WAAaA,iBAAiB,gBAAAC,YAAA,CAK5B,SAAAD,kBAAYE,QAAiC;EAAAC,eAAA,OAAAH,iBAAA;EAJ7C,KAAAI,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAKxB,IAAI,CAACC,WAAW,GAAGH,QAAQ,CAACI,QAAQ;EAEpC,IACEC,QAAQ,GASNL,QAAQ,CATVK,QAAQ;IACRC,OAAO,GAQLN,QAAQ,CARVM,OAAO;IACPC,OAAO,GAOLP,QAAQ,CAPVO,OAAO;IACPC,YAAY,GAMVR,QAAQ,CANVQ,YAAY;IACZC,WAAW,GAKTT,QAAQ,CALVS,WAAW;IACXC,YAAY,GAIVV,QAAQ,CAJVU,YAAY;IACZC,WAAW,GAGTX,QAAQ,CAHVW,WAAW;IACXC,cAAc,GAEZZ,QAAQ,CAFVY,cAAc;IACdC,aAAa,GACXb,QAAQ,CADVa,aAAa;EAGf,IAAYC,MAAM,GAAmBP,OAAO,CAArCQ,GAAG;IAAgBC,OAAO,GAAIT,OAAO,CAAxBU,IAAI;EAExB,IAAI,CAACC,QAAQ,0CAAAC,MAAA,CACmBX,YAAY,QAAAW,MAAA,CAAKV,WAAW,yCAAAU,MAAA,CAC/BL,MAAM,QAAAK,MAAA,CAAKH,OAAO,iZAAAG,MAAA,CAarBT,YAAY,+CAAAS,MAAA,CACTP,cAAc,2CAAAO,MAAA,CAEbd,QAAQ,2CAAAc,MAAA,CACRR,WAAW,mDAAAQ,MAAA,CACRN,aAAa,+CAAAM,MAAA,CAEZb,OAAO,yXAgBxC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}