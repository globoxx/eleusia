{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { LeakyRelu } from '../kernel_names';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { where } from '../ops/where';\nexport var leakyReluGradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n      x = _saved[0];\n    var alpha = attrs.alpha;\n    var mask = greater(x, 0);\n    // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, alpha));\n      }\n    };\n  }\n};","map":{"version":3,"names":["LeakyRelu","greater","mul","where","leakyReluGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","_saved","_slicedToArray","x","alpha","mask"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\LeakyRelu_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {LeakyRelu, LeakyReluAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {greater} from '../ops/greater';\nimport {mul} from '../ops/mul';\nimport {where} from '../ops/where';\nimport {Tensor} from '../tensor';\n\nexport const leakyReluGradConfig: GradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {alpha} = attrs as unknown as LeakyReluAttrs;\n    const mask = greater(x, 0);\n\n    // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n    return {x: () => where(mask, dy, mul(dy, alpha))};\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,SAAS,QAAuB,iBAAiB;AAEzD,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,KAAK,QAAO,cAAc;AAGlC,OAAO,IAAMC,mBAAmB,GAAe;EAC7CC,UAAU,EAAEL,SAAS;EACrBM,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,IAAAC,MAAA,GAAAC,cAAA,CAAYH,KAAK;MAAVI,CAAC,GAAAF,MAAA;IACR,IAAOG,KAAK,GAAIJ,KAAkC,CAA3CI,KAAK;IACZ,IAAMC,IAAI,GAAGd,OAAO,CAACY,CAAC,EAAE,CAAC,CAAC;IAE1B;IACA;IACA,OAAO;MAACA,CAAC,EAAE,SAAAA,EAAA;QAAA,OAAMV,KAAK,CAACY,IAAI,EAAEP,EAAE,EAAEN,GAAG,CAACM,EAAE,EAAEM,KAAK,CAAC,CAAC;MAAA;IAAA,CAAC;EACnD;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}