{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an AS IS BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { batchMatMul } from './BatchMatMul';\nexport function _fusedMatMul(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var a = inputs.a,\n    b = inputs.b,\n    bias = inputs.bias,\n    preluActivationWeights = inputs.preluActivationWeights;\n  var transposeA = attrs.transposeA,\n    transposeB = attrs.transposeB,\n    activation = attrs.activation,\n    leakyreluAlpha = attrs.leakyreluAlpha;\n  var current;\n  var addRes;\n  var activationRes;\n  var intermediates = [];\n  var matMulRes = batchMatMul({\n    inputs: {\n      a: a,\n      b: b\n    },\n    attrs: {\n      transposeA: transposeA,\n      transposeB: transposeB\n    },\n    backend: backend\n  });\n  current = matMulRes;\n  if (bias) {\n    addRes = add({\n      inputs: {\n        a: current,\n        b: bias\n      },\n      backend: backend\n    });\n    intermediates.push(current);\n    current = addRes;\n  }\n  if (activation) {\n    activationRes = applyActivation(backend, current, activation, preluActivationWeights, leakyreluAlpha);\n    intermediates.push(current);\n    current = activationRes;\n  }\n  for (var _i = 0, _intermediates = intermediates; _i < _intermediates.length; _i++) {\n    var i = _intermediates[_i];\n    backend.disposeIntermediateTensorInfo(i);\n  }\n  return current;\n}\nexport var _fusedMatMulConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'cpu',\n  kernelFunc: _fusedMatMul\n};","map":{"version":3,"names":["_FusedMatMul","applyActivation","add","batchMatMul","_fusedMatMul","args","inputs","backend","attrs","a","b","bias","preluActivationWeights","transposeA","transposeB","activation","leakyreluAlpha","current","addRes","activationRes","intermediates","matMulRes","push","_i","_intermediates","length","i","disposeIntermediateTensorInfo","_fusedMatMulConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-cpu\\src\\kernels\\_FusedMatMul.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {applyActivation} from '../utils/fused_utils';\n\nimport {add} from './Add';\nimport {batchMatMul} from './BatchMatMul';\n\nexport function _fusedMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  attrs: _FusedMatMulAttrs,\n  backend: MathBackendCPU\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n\n  let current;\n  let addRes;\n  let activationRes;\n\n  const intermediates: TensorInfo[] = [];\n\n  const matMulRes =\n      batchMatMul({inputs: {a, b}, attrs: {transposeA, transposeB}, backend});\n  current = matMulRes;\n\n  if (bias) {\n    addRes = add({inputs: {a: current, b: bias}, backend}) as TensorInfo;\n    intermediates.push(current);\n    current = addRes;\n  }\n  if (activation) {\n    activationRes = applyActivation(\n        backend, current, activation, preluActivationWeights, leakyreluAlpha);\n    intermediates.push(current);\n    current = activationRes;\n  }\n\n  for (const i of intermediates) {\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return current;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'cpu',\n  kernelFunc: _fusedMatMul as unknown as KernelFunc,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAoF,uBAAuB;AAG/H,SAAQC,eAAe,QAAO,sBAAsB;AAEpD,SAAQC,GAAG,QAAO,OAAO;AACzB,SAAQC,WAAW,QAAO,eAAe;AAEzC,OAAM,SAAUC,YAAYA,CAACC,IAI5B;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,CAAC,GAAqCH,MAAM,CAA5CG,CAAC;IAAEC,CAAC,GAAkCJ,MAAM,CAAzCI,CAAC;IAAEC,IAAI,GAA4BL,MAAM,CAAtCK,IAAI;IAAEC,sBAAsB,GAAIN,MAAM,CAAhCM,sBAAsB;EACzC,IAAOC,UAAU,GAA4CL,KAAK,CAA3DK,UAAU;IAAEC,UAAU,GAAgCN,KAAK,CAA/CM,UAAU;IAAEC,UAAU,GAAoBP,KAAK,CAAnCO,UAAU;IAAEC,cAAc,GAAIR,KAAK,CAAvBQ,cAAc;EAEzD,IAAIC,OAAO;EACX,IAAIC,MAAM;EACV,IAAIC,aAAa;EAEjB,IAAMC,aAAa,GAAiB,EAAE;EAEtC,IAAMC,SAAS,GACXlB,WAAW,CAAC;IAACG,MAAM,EAAE;MAACG,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA;IAAC,CAAC;IAAEF,KAAK,EAAE;MAACK,UAAU,EAAVA,UAAU;MAAEC,UAAU,EAAVA;IAAU,CAAC;IAAEP,OAAO,EAAPA;EAAO,CAAC,CAAC;EAC3EU,OAAO,GAAGI,SAAS;EAEnB,IAAIV,IAAI,EAAE;IACRO,MAAM,GAAGhB,GAAG,CAAC;MAACI,MAAM,EAAE;QAACG,CAAC,EAAEQ,OAAO;QAAEP,CAAC,EAAEC;MAAI,CAAC;MAAEJ,OAAO,EAAPA;IAAO,CAAC,CAAe;IACpEa,aAAa,CAACE,IAAI,CAACL,OAAO,CAAC;IAC3BA,OAAO,GAAGC,MAAM;;EAElB,IAAIH,UAAU,EAAE;IACdI,aAAa,GAAGlB,eAAe,CAC3BM,OAAO,EAAEU,OAAO,EAAEF,UAAU,EAAEH,sBAAsB,EAAEI,cAAc,CAAC;IACzEI,aAAa,CAACE,IAAI,CAACL,OAAO,CAAC;IAC3BA,OAAO,GAAGE,aAAa;;EAGzB,SAAAI,EAAA,MAAAC,cAAA,GAAgBJ,aAAa,EAAAG,EAAA,GAAAC,cAAA,CAAAC,MAAA,EAAAF,EAAA,IAAE;IAA1B,IAAMG,CAAC,GAAAF,cAAA,CAAAD,EAAA;IACVhB,OAAO,CAACoB,6BAA6B,CAACD,CAAC,CAAC;;EAG1C,OAAOT,OAAO;AAChB;AAEA,OAAO,IAAMW,kBAAkB,GAAiB;EAC9CC,UAAU,EAAE7B,YAAY;EACxB8B,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE3B;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}