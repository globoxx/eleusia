{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { env, ResizeNearestNeighbor } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeighborProgram } from '../resize_nearest_neighbor_gpu';\nimport { ResizeNearestNeighborPackedProgram } from '../resize_nearest_neighbor_packed_gpu';\nexport function resizeNearestNeighbor(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var images = inputs.images;\n  var alignCorners = attrs.alignCorners,\n    halfPixelCenters = attrs.halfPixelCenters,\n    size = attrs.size;\n  var _size = _slicedToArray(size, 2),\n    newHeight = _size[0],\n    newWidth = _size[1];\n  var program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ? new ResizeNearestNeighborPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) : new ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n  return backend.runWebGLProgram(program, [images], images.dtype);\n}\nexport var resizeNearestNeighborConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'webgl',\n  kernelFunc: resizeNearestNeighbor\n};","map":{"version":3,"names":["env","ResizeNearestNeighbor","ResizeNearestNeighborProgram","ResizeNearestNeighborPackedProgram","resizeNearestNeighbor","args","inputs","backend","attrs","images","alignCorners","halfPixelCenters","size","_size","_slicedToArray","newHeight","newWidth","program","getBool","shape","runWebGLProgram","dtype","resizeNearestNeighborConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\kernels\\ResizeNearestNeighbor.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env, KernelConfig, KernelFunc, ResizeNearestNeighbor, ResizeNearestNeighborAttrs, ResizeNearestNeighborInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {ResizeNearestNeighborProgram} from '../resize_nearest_neighbor_gpu';\nimport {ResizeNearestNeighborPackedProgram} from '../resize_nearest_neighbor_packed_gpu';\n\nexport function resizeNearestNeighbor(args: {\n  inputs: ResizeNearestNeighborInputs,\n  backend: MathBackendWebGL,\n  attrs: ResizeNearestNeighborAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n\n  const [newHeight, newWidth] = size;\n\n  const program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n      new ResizeNearestNeighborPackedProgram(\n          images.shape as [number, number, number, number], newHeight, newWidth,\n          alignCorners, halfPixelCenters) :\n      new ResizeNearestNeighborProgram(\n          images.shape as [number, number, number, number], newHeight, newWidth,\n          alignCorners, halfPixelCenters);\n  return backend.runWebGLProgram(program, [images], images.dtype);\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'webgl',\n  kernelFunc: resizeNearestNeighbor as unknown as KernelFunc\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,EAA4BC,qBAAqB,QAA4E,uBAAuB;AAG/J,SAAQC,4BAA4B,QAAO,gCAAgC;AAC3E,SAAQC,kCAAkC,QAAO,uCAAuC;AAExF,OAAM,SAAUC,qBAAqBA,CAACC,IAIrC;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,MAAM,GAAIH,MAAM,CAAhBG,MAAM;EACb,IAAOC,YAAY,GAA4BF,KAAK,CAA7CE,YAAY;IAAEC,gBAAgB,GAAUH,KAAK,CAA/BG,gBAAgB;IAAEC,IAAI,GAAIJ,KAAK,CAAbI,IAAI;EAE3C,IAAAC,KAAA,GAAAC,cAAA,CAA8BF,IAAI;IAA3BG,SAAS,GAAAF,KAAA;IAAEG,QAAQ,GAAAH,KAAA;EAE1B,IAAMI,OAAO,GAAGjB,GAAG,EAAE,CAACkB,OAAO,CAAC,6BAA6B,CAAC,GACxD,IAAIf,kCAAkC,CAClCM,MAAM,CAACU,KAAyC,EAAEJ,SAAS,EAAEC,QAAQ,EACrEN,YAAY,EAAEC,gBAAgB,CAAC,GACnC,IAAIT,4BAA4B,CAC5BO,MAAM,CAACU,KAAyC,EAAEJ,SAAS,EAAEC,QAAQ,EACrEN,YAAY,EAAEC,gBAAgB,CAAC;EACvC,OAAOJ,OAAO,CAACa,eAAe,CAACH,OAAO,EAAE,CAACR,MAAM,CAAC,EAAEA,MAAM,CAACY,KAAK,CAAC;AACjE;AAEA,OAAO,IAAMC,2BAA2B,GAAiB;EACvDC,UAAU,EAAEtB,qBAAqB;EACjCuB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAErB;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}