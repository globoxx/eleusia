{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\r\n * The environment contains evaluated flags as well as the registered platform.\r\n * This is always used as a global singleton and can be retrieved with\r\n * `tf.env()`.\r\n *\r\n * @doc {heading: 'Environment'}\r\n */\nexport var Environment = /*#__PURE__*/function () {\n  // tslint:disable-next-line: no-any\n  function Environment(global) {\n    _classCallCheck(this, Environment);\n    this.global = global;\n    this.flags = {};\n    this.flagRegistry = {};\n    this.urlFlags = {};\n    // Jasmine spies on this in 'environment_test.ts'\n    this.getQueryParams = getQueryParams;\n    this.populateURLFlags();\n  }\n  _createClass(Environment, [{\n    key: \"setPlatform\",\n    value: function setPlatform(platformName, platform) {\n      if (this.platform != null) {\n        if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n          console.warn(\"Platform \".concat(this.platformName, \" has already been set. \") + \"Overwriting the platform with \".concat(platformName, \".\"));\n        }\n      }\n      this.platformName = platformName;\n      this.platform = platform;\n    }\n  }, {\n    key: \"registerFlag\",\n    value: function registerFlag(flagName, evaluationFn, setHook) {\n      this.flagRegistry[flagName] = {\n        evaluationFn: evaluationFn,\n        setHook: setHook\n      };\n      // Override the flag value from the URL. This has to happen here because\n      // the environment is initialized before flags get registered.\n      if (this.urlFlags[flagName] != null) {\n        var flagValue = this.urlFlags[flagName];\n        if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n          console.warn(\"Setting feature override from URL \".concat(flagName, \": \").concat(flagValue, \".\"));\n        }\n        this.set(flagName, flagValue);\n      }\n    }\n  }, {\n    key: \"getAsync\",\n    value: function () {\n      var _getAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(flagName) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(flagName in this.flags)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this.flags[flagName]);\n            case 2:\n              _context.next = 4;\n              return this.evaluateFlag(flagName);\n            case 4:\n              this.flags[flagName] = _context.sent;\n              return _context.abrupt(\"return\", this.flags[flagName]);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getAsync(_x) {\n        return _getAsync.apply(this, arguments);\n      }\n      return getAsync;\n    }()\n  }, {\n    key: \"get\",\n    value: function get(flagName) {\n      if (flagName in this.flags) {\n        return this.flags[flagName];\n      }\n      var flagValue = this.evaluateFlag(flagName);\n      if (isPromise(flagValue)) {\n        throw new Error(\"Flag \".concat(flagName, \" cannot be synchronously evaluated. \") + \"Please use getAsync() instead.\");\n      }\n      this.flags[flagName] = flagValue;\n      return this.flags[flagName];\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getBool\",\n    value: function getBool(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getString\",\n    value: function getString(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getFlags\",\n    value: function getFlags() {\n      return this.flags;\n    }\n    // For backwards compatibility.\n  }, {\n    key: \"features\",\n    get: function get() {\n      return this.flags;\n    }\n  }, {\n    key: \"set\",\n    value: function set(flagName, value) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot set flag \".concat(flagName, \" as it has not been registered.\"));\n      }\n      this.flags[flagName] = value;\n      if (this.flagRegistry[flagName].setHook != null) {\n        this.flagRegistry[flagName].setHook(value);\n      }\n    }\n  }, {\n    key: \"evaluateFlag\",\n    value: function evaluateFlag(flagName) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot evaluate flag '\".concat(flagName, \"': no evaluation function found.\"));\n      }\n      return this.flagRegistry[flagName].evaluationFn();\n    }\n  }, {\n    key: \"setFlags\",\n    value: function setFlags(flags) {\n      this.flags = Object.assign({}, flags);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.flags = {};\n      this.urlFlags = {};\n      this.populateURLFlags();\n    }\n  }, {\n    key: \"populateURLFlags\",\n    value: function populateURLFlags() {\n      var _this = this;\n      if (typeof this.global === 'undefined' || typeof this.global.location === 'undefined' || typeof this.global.location.search === 'undefined') {\n        return;\n      }\n      var urlParams = this.getQueryParams(this.global.location.search);\n      if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n          var _keyValue$split = keyValue.split(':'),\n            _keyValue$split2 = _slicedToArray(_keyValue$split, 2),\n            key = _keyValue$split2[0],\n            value = _keyValue$split2[1];\n          _this.urlFlags[key] = parseValue(key, value);\n        });\n      }\n    }\n  }]);\n  return Environment;\n}();\nexport function getQueryParams(queryString) {\n  var params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n    for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      t[_key - 1] = arguments[_key];\n    }\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\nfunction decodeParam(params, name, value) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n  var lowerCaseValue = value.toLowerCase();\n  if (lowerCaseValue === 'true' || lowerCaseValue === 'false') {\n    return lowerCaseValue === 'true';\n  } else if (\"\".concat(+lowerCaseValue) === lowerCaseValue) {\n    return +lowerCaseValue;\n  } else {\n    return value;\n  }\n}\n/**\r\n * Returns the current environment (a global singleton).\r\n *\r\n * The environment object contains the evaluated feature values as well as the\r\n * active platform.\r\n *\r\n * @doc {heading: 'Environment'}\r\n */\nexport function env() {\n  return ENV;\n}\nexport var ENV = null;\nexport function setEnvironmentGlobal(environment) {\n  ENV = environment;\n}","map":{"version":3,"names":["isPromise","TENSORFLOWJS_FLAGS_PREFIX","Environment","global","_classCallCheck","flags","flagRegistry","urlFlags","getQueryParams","populateURLFlags","_createClass","key","value","setPlatform","platformName","platform","env","getBool","console","warn","concat","registerFlag","flagName","evaluationFn","setHook","flagValue","set","_getAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","evaluateFlag","sent","stop","getAsync","_x","apply","arguments","get","Error","getNumber","getString","getFlags","setFlags","Object","assign","reset","_this","location","search","urlParams","keyValues","split","forEach","keyValue","_keyValue$split","_keyValue$split2","_slicedToArray","parseValue","queryString","params","replace","s","_len","length","t","Array","_key","decodeParam","join","name","decodeURIComponent","lowerCaseValue","toLowerCase","ENV","setEnvironmentGlobal","environment"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\environment.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Platform} from './platforms/platform';\nimport {isPromise} from './util_base';\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n\ntype FlagValue = number|boolean|string;\ntype FlagEvaluationFn = (() => FlagValue)|(() => Promise<FlagValue>);\nexport type Flags = {\n  [featureName: string]: FlagValue\n};\nexport type FlagRegistryEntry = {\n  evaluationFn: FlagEvaluationFn;\n  setHook?: (value: FlagValue) => void;\n};\n\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n  private flags: Flags = {};\n  private flagRegistry: {[flagName: string]: FlagRegistryEntry} = {};\n\n  private urlFlags: Flags = {};\n\n  platformName: string;\n  platform: Platform;\n\n  // Jasmine spies on this in 'environment_test.ts'\n  getQueryParams = getQueryParams;\n\n  // tslint:disable-next-line: no-any\n  constructor(public global: any) {\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName: string, platform: Platform) {\n    if (this.platform != null) {\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Platform ${this.platformName} has already been set. ` +\n            `Overwriting the platform with ${platformName}.`);\n      }\n    }\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(\n      flagName: string, evaluationFn: FlagEvaluationFn,\n      setHook?: (value: FlagValue) => void) {\n    this.flagRegistry[flagName] = {evaluationFn, setHook};\n\n    // Override the flag value from the URL. This has to happen here because\n    // the environment is initialized before flags get registered.\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Setting feature override from URL ${flagName}: ${flagValue}.`);\n      }\n      this.set(flagName, flagValue);\n    }\n  }\n\n  async getAsync(flagName: string): Promise<FlagValue> {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    this.flags[flagName] = await this.evaluateFlag(flagName);\n    return this.flags[flagName];\n  }\n\n  get(flagName: string): FlagValue {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    const flagValue = this.evaluateFlag(flagName);\n    if (isPromise(flagValue)) {\n      throw new Error(\n          `Flag ${flagName} cannot be synchronously evaluated. ` +\n          `Please use getAsync() instead.`);\n    }\n\n    this.flags[flagName] = flagValue;\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName: string): number {\n    return this.get(flagName) as number;\n  }\n\n  getBool(flagName: string): boolean {\n    return this.get(flagName) as boolean;\n  }\n\n  getString(flagName: string): string {\n    return this.get(flagName) as string;\n  }\n\n  getFlags(): Flags {\n    return this.flags;\n  }\n  // For backwards compatibility.\n  get features(): Flags {\n    return this.flags;\n  }\n\n  set(flagName: string, value: FlagValue): void {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot set flag ${flagName} as it has not been registered.`);\n    }\n    this.flags[flagName] = value;\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  private evaluateFlag(flagName: string): FlagValue|Promise<FlagValue> {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags: Flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  private populateURLFlags(): void {\n    if (typeof this.global === 'undefined' ||\n        typeof this.global.location === 'undefined' ||\n        typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = this.getQueryParams(this.global.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':') as [string, string];\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n}\n\nexport function getQueryParams(queryString: string): {[key: string]: string} {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(\n    params: {[key: string]: string}, name: string, value?: string) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName: string, value: string): FlagValue {\n  const lowerCaseValue = value.toLowerCase();\n  if (lowerCaseValue === 'true' || lowerCaseValue === 'false') {\n    return lowerCaseValue === 'true';\n  } else if (`${+ lowerCaseValue}` === lowerCaseValue) {\n    return +lowerCaseValue;\n  } else {\n    return value;\n  }\n}\n\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n  return ENV;\n}\n\nexport let ENV: Environment = null;\nexport function setEnvironmentGlobal(environment: Environment) {\n  ENV = environment;\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,SAAS,QAAO,aAAa;AAErC;AACA,IAAMC,yBAAyB,GAAG,WAAW;AAY7C;;;;;;;AAOA,WAAaC,WAAW;EAYtB;EACA,SAAAA,YAAmBC,MAAW;IAAAC,eAAA,OAAAF,WAAA;IAAX,KAAAC,MAAM,GAANA,MAAM;IAZjB,KAAAE,KAAK,GAAU,EAAE;IACjB,KAAAC,YAAY,GAA4C,EAAE;IAE1D,KAAAC,QAAQ,GAAU,EAAE;IAK5B;IACA,KAAAC,cAAc,GAAGA,cAAc;IAI7B,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAACC,YAAA,CAAAR,WAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAYC,YAAoB,EAAEC,QAAkB;MAClD,IAAI,IAAI,CAACA,QAAQ,IAAI,IAAI,EAAE;QACzB,IAAI,EAAEC,GAAG,EAAE,CAACC,OAAO,CAAC,SAAS,CAAC,IAAID,GAAG,EAAE,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE;UACxDC,OAAO,CAACC,IAAI,CACR,YAAAC,MAAA,CAAY,IAAI,CAACN,YAAY,gEAAAM,MAAA,CACIN,YAAY,MAAG,CAAC;;;MAGzD,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IAC1B;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAS,aACIC,QAAgB,EAAEC,YAA8B,EAChDC,OAAoC;MACtC,IAAI,CAAClB,YAAY,CAACgB,QAAQ,CAAC,GAAG;QAACC,YAAY,EAAZA,YAAY;QAAEC,OAAO,EAAPA;MAAO,CAAC;MAErD;MACA;MACA,IAAI,IAAI,CAACjB,QAAQ,CAACe,QAAQ,CAAC,IAAI,IAAI,EAAE;QACnC,IAAMG,SAAS,GAAG,IAAI,CAAClB,QAAQ,CAACe,QAAQ,CAAC;QACzC,IAAI,EAAEN,GAAG,EAAE,CAACC,OAAO,CAAC,SAAS,CAAC,IAAID,GAAG,EAAE,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE;UACxDC,OAAO,CAACC,IAAI,sCAAAC,MAAA,CAC6BE,QAAQ,QAAAF,MAAA,CAAKK,SAAS,OAAI;;QAErE,IAAI,CAACC,GAAG,CAACJ,QAAQ,EAAEG,SAAS,CAAC;;IAEjC;EAAC;IAAAd,GAAA;IAAAC,KAAA;MAAA,IAAAe,SAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAC,QAAeT,QAAgB;QAAA,OAAAO,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,MACzBd,QAAQ,IAAI,IAAI,CAACjB,KAAK;gBAAA6B,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA,WACjB,IAAI,CAAChC,KAAK,CAACiB,QAAQ,CAAC;YAAA;cAAAY,QAAA,CAAAE,IAAA;cAAA,OAGA,IAAI,CAACE,YAAY,CAAChB,QAAQ,CAAC;YAAA;cAAxD,IAAI,CAACjB,KAAK,CAACiB,QAAQ,CAAC,GAAAY,QAAA,CAAAK,IAAA;cAAA,OAAAL,QAAA,CAAAG,MAAA,WACb,IAAI,CAAChC,KAAK,CAACiB,QAAQ,CAAC;YAAA;YAAA;cAAA,OAAAY,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CAC5B;MAAA,SAAAU,SAAAC,EAAA;QAAA,OAAAf,SAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,QAAA;IAAA;EAAA;IAAA9B,GAAA;IAAAC,KAAA,EAED,SAAAiC,IAAIvB,QAAgB;MAClB,IAAIA,QAAQ,IAAI,IAAI,CAACjB,KAAK,EAAE;QAC1B,OAAO,IAAI,CAACA,KAAK,CAACiB,QAAQ,CAAC;;MAG7B,IAAMG,SAAS,GAAG,IAAI,CAACa,YAAY,CAAChB,QAAQ,CAAC;MAC7C,IAAItB,SAAS,CAACyB,SAAS,CAAC,EAAE;QACxB,MAAM,IAAIqB,KAAK,CACX,QAAA1B,MAAA,CAAQE,QAAQ,4EACgB,CAAC;;MAGvC,IAAI,CAACjB,KAAK,CAACiB,QAAQ,CAAC,GAAGG,SAAS;MAChC,OAAO,IAAI,CAACpB,KAAK,CAACiB,QAAQ,CAAC;IAC7B;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAmC,UAAUzB,QAAgB;MACxB,OAAO,IAAI,CAACuB,GAAG,CAACvB,QAAQ,CAAW;IACrC;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAK,QAAQK,QAAgB;MACtB,OAAO,IAAI,CAACuB,GAAG,CAACvB,QAAQ,CAAY;IACtC;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAoC,UAAU1B,QAAgB;MACxB,OAAO,IAAI,CAACuB,GAAG,CAACvB,QAAQ,CAAW;IACrC;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAqC,SAAA,EAAQ;MACN,OAAO,IAAI,CAAC5C,KAAK;IACnB;IACA;EAAA;IAAAM,GAAA;IAAAkC,GAAA,EACA,SAAAA,IAAA,EAAY;MACV,OAAO,IAAI,CAACxC,KAAK;IACnB;EAAC;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAc,IAAIJ,QAAgB,EAAEV,KAAgB;MACpC,IAAI,IAAI,CAACN,YAAY,CAACgB,QAAQ,CAAC,IAAI,IAAI,EAAE;QACvC,MAAM,IAAIwB,KAAK,oBAAA1B,MAAA,CACQE,QAAQ,qCAAkC;;MAEnE,IAAI,CAACjB,KAAK,CAACiB,QAAQ,CAAC,GAAGV,KAAK;MAC5B,IAAI,IAAI,CAACN,YAAY,CAACgB,QAAQ,CAAC,CAACE,OAAO,IAAI,IAAI,EAAE;QAC/C,IAAI,CAAClB,YAAY,CAACgB,QAAQ,CAAC,CAACE,OAAO,CAACZ,KAAK,CAAC;;IAE9C;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAEO,SAAA0B,aAAahB,QAAgB;MACnC,IAAI,IAAI,CAAChB,YAAY,CAACgB,QAAQ,CAAC,IAAI,IAAI,EAAE;QACvC,MAAM,IAAIwB,KAAK,0BAAA1B,MAAA,CACcE,QAAQ,sCAAmC;;MAE1E,OAAO,IAAI,CAAChB,YAAY,CAACgB,QAAQ,CAAC,CAACC,YAAY,EAAE;IACnD;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAED,SAAAsC,SAAS7C,KAAY;MACnB,IAAI,CAACA,KAAK,GAAG8C,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE/C,KAAK,CAAC;IACvC;EAAC;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAyC,MAAA,EAAK;MACH,IAAI,CAAChD,KAAK,GAAG,EAAE;MACf,IAAI,CAACE,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACE,gBAAgB,EAAE;IACzB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAEO,SAAAH,iBAAA,EAAgB;MAAA,IAAA6C,KAAA;MACtB,IAAI,OAAO,IAAI,CAACnD,MAAM,KAAK,WAAW,IAClC,OAAO,IAAI,CAACA,MAAM,CAACoD,QAAQ,KAAK,WAAW,IAC3C,OAAO,IAAI,CAACpD,MAAM,CAACoD,QAAQ,CAACC,MAAM,KAAK,WAAW,EAAE;QACtD;;MAGF,IAAMC,SAAS,GAAG,IAAI,CAACjD,cAAc,CAAC,IAAI,CAACL,MAAM,CAACoD,QAAQ,CAACC,MAAM,CAAC;MAClE,IAAIvD,yBAAyB,IAAIwD,SAAS,EAAE;QAC1C,IAAMC,SAAS,GAAGD,SAAS,CAACxD,yBAAyB,CAAC,CAAC0D,KAAK,CAAC,GAAG,CAAC;QACjED,SAAS,CAACE,OAAO,CAAC,UAAAC,QAAQ,EAAG;UAC3B,IAAAC,eAAA,GAAqBD,QAAQ,CAACF,KAAK,CAAC,GAAG,CAAqB;YAAAI,gBAAA,GAAAC,cAAA,CAAAF,eAAA;YAArDnD,GAAG,GAAAoD,gBAAA;YAAEnD,KAAK,GAAAmD,gBAAA;UACjBT,KAAI,CAAC/C,QAAQ,CAACI,GAAG,CAAC,GAAGsD,UAAU,CAACtD,GAAG,EAAEC,KAAK,CAAC;QAC7C,CAAC,CAAC;;IAEN;EAAC;EAAA,OAAAV,WAAA;AAAA;AAGH,OAAM,SAAUM,cAAcA,CAAC0D,WAAmB;EAChD,IAAMC,MAAM,GAAG,EAAE;EACjBD,WAAW,CAACE,OAAO,CAAC,6BAA6B,EAAE,UAACC,CAAC,EAAU;IAAA,SAAAC,IAAA,GAAA1B,SAAA,CAAA2B,MAAA,EAALC,CAAC,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAADF,CAAC,CAAAE,IAAA,QAAA9B,SAAA,CAAA8B,IAAA;IAAA;IACzDC,WAAW,CAACR,MAAM,EAAEK,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,OAAOA,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;EACpB,CAAC,CAAC;EACF,OAAOT,MAAM;AACf;AAEA,SAASQ,WAAWA,CAChBR,MAA+B,EAAEU,IAAY,EAAEjE,KAAc;EAC/DuD,MAAM,CAACW,kBAAkB,CAACD,IAAI,CAAC,CAAC,GAAGC,kBAAkB,CAAClE,KAAK,IAAI,EAAE,CAAC;AACpE;AAEA,SAASqD,UAAUA,CAAC3C,QAAgB,EAAEV,KAAa;EACjD,IAAMmE,cAAc,GAAGnE,KAAK,CAACoE,WAAW,EAAE;EAC1C,IAAID,cAAc,KAAK,MAAM,IAAIA,cAAc,KAAK,OAAO,EAAE;IAC3D,OAAOA,cAAc,KAAK,MAAM;GACjC,MAAM,IAAI,GAAA3D,MAAA,CAAG,CAAE2D,cAAc,MAAOA,cAAc,EAAE;IACnD,OAAO,CAACA,cAAc;GACvB,MAAM;IACL,OAAOnE,KAAK;;AAEhB;AAEA;;;;;;;;AAQA,OAAM,SAAUI,GAAGA,CAAA;EACjB,OAAOiE,GAAG;AACZ;AAEA,OAAO,IAAIA,GAAG,GAAgB,IAAI;AAClC,OAAM,SAAUC,oBAAoBA,CAACC,WAAwB;EAC3DF,GAAG,GAAGE,WAAW;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}