{"ast":null,"code":"import _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nexport var UnaryOpProgram = /*#__PURE__*/_createClass(function UnaryOpProgram(aShape, opSnippet) {\n  _classCallCheck(this, UnaryOpProgram);\n  this.variableNames = ['A'];\n  this.outputShape = aShape;\n  this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n  this.userCode = \"\\n      float unaryOperation(float x) {\\n        \".concat(opSnippet, \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \");\n});\nexport var CHECK_NAN_SNIPPET = \"if (isnan(x)) return x;\";\nexport var LINEAR = \"return x;\";\nexport var ABS = \"return abs(x);\";\nexport function STEP() {\n  var alpha = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.0;\n  return CHECK_NAN_SNIPPET + \"\\n    return x > 0.0 ? 1.0 : float(\".concat(alpha, \");\\n  \");\n}\nexport var ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexport var RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexport var RELU6 = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n\";\nexport var CLONE = 'return x;';\nexport var SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";","map":{"version":3,"names":["useShapeUniforms","UnaryOpProgram","_createClass","aShape","opSnippet","_classCallCheck","variableNames","outputShape","enableShapeUniforms","length","userCode","concat","CHECK_NAN_SNIPPET","LINEAR","ABS","STEP","alpha","arguments","undefined","ELU","RELU","RELU6","CLONE","SIGMOID"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\unaryop_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\n\nexport class UnaryOpProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n  enableShapeUniforms: boolean;\n\n  constructor(aShape: number[], opSnippet: string) {\n    this.outputShape = aShape;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n    this.userCode = `\n      float unaryOperation(float x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n  }\n}\n\nexport const CHECK_NAN_SNIPPET = `if (isnan(x)) return x;`;\n\nexport const LINEAR = `return x;`;\n\nexport const ABS = `return abs(x);`;\n\nexport function STEP(alpha = 0.0) {\n  return CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${alpha});\n  `;\n}\n\nexport const ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nexport const RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\n\nexport const RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\n\nexport const CLONE = 'return x;';\n\nexport const SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * x));`;\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,gBAAgB,QAAO,cAAc;AAE3D,WAAaC,cAAc,gBAAAC,YAAA,CAMzB,SAAAD,eAAYE,MAAgB,EAAEC,SAAiB;EAAAC,eAAA,OAAAJ,cAAA;EAL/C,KAAAK,aAAa,GAAG,CAAC,GAAG,CAAC;EAMnB,IAAI,CAACC,WAAW,GAAGJ,MAAM;EACzB,IAAI,CAACK,mBAAmB,GAAGR,gBAAgB,CAAC,IAAI,CAACO,WAAW,CAACE,MAAM,CAAC;EACpE,IAAI,CAACC,QAAQ,uDAAAC,MAAA,CAEPP,SAAS,yJASd;AACH,CAAC;AAGH,OAAO,IAAMQ,iBAAiB,4BAA4B;AAE1D,OAAO,IAAMC,MAAM,cAAc;AAEjC,OAAO,IAAMC,GAAG,mBAAmB;AAEnC,OAAM,SAAUC,IAAIA,CAAA,EAAY;EAAA,IAAXC,KAAK,GAAAC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,GAAG;EAC9B,OAAOL,iBAAiB,yCAAAD,MAAA,CACSK,KAAK,WACrC;AACH;AAEA,OAAO,IAAMG,GAAG,4CAA4C;AAC5D,OAAO,IAAMC,IAAI,GAAGR,iBAAiB,sCAEpC;AAED,OAAO,IAAMS,KAAK,GAAGT,iBAAiB,gDAErC;AAED,OAAO,IAAMU,KAAK,GAAG,WAAW;AAEhC,OAAO,IAAMC,OAAO,wCAAwC"},"metadata":{},"sourceType":"module","externalDependencies":[]}