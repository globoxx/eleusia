{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Minimum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greater } from '../ops/greater';\nimport { lessEqual } from '../ops/less_equal';\nimport { mul } from '../ops/mul';\nexport var minimumGradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n      a = _saved[0],\n      b = _saved[1];\n    var derA = function derA() {\n      return mul(dy, cast(lessEqual(a, b), 'float32'));\n    };\n    var derB = function derB() {\n      return mul(dy, cast(greater(a, b), 'float32'));\n    };\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Minimum","cast","greater","lessEqual","mul","minimumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","_saved","_slicedToArray","a","b","derA","derB"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\Minimum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Minimum} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {greater} from '../ops/greater';\nimport {lessEqual} from '../ops/less_equal';\nimport {mul} from '../ops/mul';\nimport {Tensor} from '../tensor';\n\nexport const minimumGradConfig: GradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(lessEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(greater(a, b), 'float32'));\n    return {a: derA, b: derB};\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAO,iBAAiB;AAEvC,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,IAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEN,OAAO;EACnBO,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAI;IACxC,IAAAC,MAAA,GAAAC,cAAA,CAAeF,KAAK;MAAbG,CAAC,GAAAF,MAAA;MAAEG,CAAC,GAAAH,MAAA;IACX,IAAMI,IAAI,GAAG,SAAPA,IAAIA,CAAA;MAAA,OAASX,GAAG,CAACK,EAAE,EAAER,IAAI,CAACE,SAAS,CAACU,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAAA;IAC5D,IAAME,IAAI,GAAG,SAAPA,IAAIA,CAAA;MAAA,OAASZ,GAAG,CAACK,EAAE,EAAER,IAAI,CAACC,OAAO,CAACW,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAAA;IAC1D,OAAO;MAACD,CAAC,EAAEE,IAAI;MAAED,CAAC,EAAEE;IAAI,CAAC;EAC3B;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}