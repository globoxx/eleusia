{"ast":null,"code":"import _objectDestructuringEmpty from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";\n/**\r\n * @license\r\n * Copyright 2022 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util, TensorScatterUpdate } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function tensorScatterUpdate(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var tensor = inputs.tensor,\n    indices = inputs.indices,\n    updates = inputs.updates;\n  _objectDestructuringEmpty(attrs);\n  var _backend_util$calcula = backend_util.calculateShapes(updates, indices, tensor.shape),\n    sliceRank = _backend_util$calcula.sliceRank,\n    numUpdates = _backend_util$calcula.numUpdates,\n    sliceSize = _backend_util$calcula.sliceSize,\n    strides = _backend_util$calcula.strides,\n    outputSize = _backend_util$calcula.outputSize;\n  var flattenShape = [outputSize / sliceSize, sliceSize];\n  if (outputSize === 0) {\n    return backend.makeTensorInfo(tensor.shape, indices.dtype);\n  }\n  var flattenIndices = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [numUpdates, sliceRank]\n    }\n  });\n  var flattenX = reshape({\n    inputs: {\n      x: updates\n    },\n    backend: backend,\n    attrs: {\n      shape: [numUpdates, sliceSize]\n    }\n  });\n  var flattenTensor = reshape({\n    inputs: {\n      x: tensor\n    },\n    backend: backend,\n    attrs: {\n      shape: flattenShape\n    }\n  });\n  var program = new ScatterProgram(numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape, false, true);\n  var res = backend.runWebGLProgram(program, [flattenX, flattenIndices, flattenTensor], flattenTensor.dtype);\n  var reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: tensor.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(flattenTensor);\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport var tensorScatterUpdateConfig = {\n  kernelName: TensorScatterUpdate,\n  backendName: 'webgl',\n  kernelFunc: tensorScatterUpdate\n};","map":{"version":3,"names":["backend_util","TensorScatterUpdate","ScatterProgram","reshape","tensorScatterUpdate","args","inputs","backend","attrs","tensor","indices","updates","_objectDestructuringEmpty","_backend_util$calcula","calculateShapes","shape","sliceRank","numUpdates","sliceSize","strides","outputSize","flattenShape","makeTensorInfo","dtype","flattenIndices","x","flattenX","flattenTensor","program","length","res","runWebGLProgram","reshaped","disposeIntermediateTensorInfo","tensorScatterUpdateConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\kernels\\TensorScatterUpdate.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, TensorInfo, TensorScatterUpdate, TensorScatterUpdateAttrs, TensorScatterUpdateInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {ScatterProgram} from '../scatter_gpu';\n\nimport {reshape} from './Reshape';\n\nexport function tensorScatterUpdate(args: {\n  inputs: TensorScatterUpdateInputs,\n  backend: MathBackendWebGL,\n  attrs: TensorScatterUpdateAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {tensor, indices, updates} = inputs;\n  const {} = attrs;\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(updates, indices, tensor.shape);\n\n  const flattenShape = [outputSize / sliceSize, sliceSize];\n\n  if (outputSize === 0) {\n    return backend.makeTensorInfo(tensor.shape, indices.dtype);\n  }\n\n  const flattenIndices = reshape(\n      {inputs: {x: indices}, backend, attrs: {shape: [numUpdates, sliceRank]}});\n  const flattenX = reshape(\n      {inputs: {x: updates}, backend, attrs: {shape: [numUpdates, sliceSize]}});\n  const flattenTensor =\n      reshape({inputs: {x: tensor}, backend, attrs: {shape: flattenShape}});\n  const program = new ScatterProgram(\n      numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length,\n      strides, flattenShape, false, true);\n  const res = backend.runWebGLProgram(\n      program, [flattenX, flattenIndices, flattenTensor], flattenTensor.dtype);\n\n  const reshaped =\n      reshape({inputs: {x: res}, backend, attrs: {shape: tensor.shape}});\n\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(flattenTensor);\n  backend.disposeIntermediateTensorInfo(res);\n\n  return reshaped;\n}\n\nexport const tensorScatterUpdateConfig: KernelConfig = {\n  kernelName: TensorScatterUpdate,\n  backendName: 'webgl',\n  kernelFunc: tensorScatterUpdate as unknown as KernelFunc\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}