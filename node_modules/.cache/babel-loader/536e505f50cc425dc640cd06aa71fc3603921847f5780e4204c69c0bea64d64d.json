{"ast":null,"code":"import _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\r\n * @license\r\n * Copyright 2022 CodeSmith LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\nimport { serialization, unstack, stack, tensor, tidy, range, image } from '@tensorflow/tfjs-core';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../../utils/types_utils';\nimport { Layer } from '../../engine/topology';\nimport * as K from '../../backend/tfjs_backend';\nvar resizeBilinear = image.resizeBilinear,\n  cropAndResize = image.cropAndResize;\nexport var CenterCrop = /*#__PURE__*/function (_Layer) {\n  _inherits(CenterCrop, _Layer);\n  var _super = _createSuper(CenterCrop);\n  function CenterCrop(args) {\n    var _this;\n    _classCallCheck(this, CenterCrop);\n    _this = _super.call(this, args);\n    _this.height = args.height;\n    _this.width = args.width;\n    return _this;\n  }\n  _createClass(CenterCrop, [{\n    key: \"centerCrop\",\n    value: function centerCrop(inputs, hBuffer, wBuffer, height, width, inputHeight, inputWidth, dtype) {\n      return tidy(function () {\n        var input;\n        var isRank3 = false;\n        var top = hBuffer / inputHeight;\n        var left = wBuffer / inputWidth;\n        var bottom = (height + hBuffer) / inputHeight;\n        var right = (width + wBuffer) / inputWidth;\n        var bound = [top, left, bottom, right];\n        var boxesArr = [];\n        if (inputs.rank === 3) {\n          isRank3 = true;\n          input = stack([inputs]);\n        } else {\n          input = inputs;\n        }\n        for (var i = 0; i < input.shape[0]; i++) {\n          boxesArr.push(bound);\n        }\n        var boxes = tensor(boxesArr, [boxesArr.length, 4]);\n        var boxInd = range(0, boxesArr.length, 1, 'int32');\n        var cropSize = [height, width];\n        var cropped = cropAndResize(input, boxes, boxInd, cropSize, 'nearest');\n        if (isRank3) {\n          return K.cast(getExactlyOneTensor(unstack(cropped)), dtype);\n        }\n        return K.cast(cropped, dtype);\n      });\n    }\n  }, {\n    key: \"upsize\",\n    value: function upsize(inputs, height, width, dtype) {\n      return tidy(function () {\n        var outputs = resizeBilinear(inputs, [height, width]);\n        return K.cast(outputs, dtype);\n      });\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n      return tidy(function () {\n        var rankedInputs = getExactlyOneTensor(inputs);\n        var dtype = rankedInputs.dtype;\n        var inputShape = rankedInputs.shape;\n        var inputHeight = inputShape[inputShape.length - 3];\n        var inputWidth = inputShape[inputShape.length - 2];\n        var hBuffer = 0;\n        if (inputHeight !== _this2.height) {\n          hBuffer = Math.floor((inputHeight - _this2.height) / 2);\n        }\n        var wBuffer = 0;\n        if (inputWidth !== _this2.width) {\n          wBuffer = Math.floor((inputWidth - _this2.width) / 2);\n          if (wBuffer === 0) {\n            wBuffer = 1;\n          }\n        }\n        if (hBuffer >= 0 && wBuffer >= 0) {\n          return _this2.centerCrop(rankedInputs, hBuffer, wBuffer, _this2.height, _this2.width, inputHeight, inputWidth, dtype);\n        } else {\n          return _this2.upsize(inputs, _this2.height, _this2.width, dtype);\n        }\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'height': this.height,\n        'width': this.width\n      };\n      var baseConfig = _get(_getPrototypeOf(CenterCrop.prototype), \"getConfig\", this).call(this);\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var hAxis = inputShape.length - 3;\n      var wAxis = inputShape.length - 2;\n      inputShape[hAxis] = this.height;\n      inputShape[wAxis] = this.width;\n      return inputShape;\n    }\n  }]);\n  return CenterCrop;\n}(Layer);\n/** @nocollapse */\nCenterCrop.className = 'CenterCrop';\nserialization.registerClass(CenterCrop);","map":{"version":3,"names":["serialization","unstack","stack","tensor","tidy","range","image","getExactlyOneShape","getExactlyOneTensor","Layer","K","resizeBilinear","cropAndResize","CenterCrop","_Layer","_inherits","_super","_createSuper","args","_this","_classCallCheck","call","height","width","_createClass","key","value","centerCrop","inputs","hBuffer","wBuffer","inputHeight","inputWidth","dtype","input","isRank3","top","left","bottom","right","bound","boxesArr","rank","i","shape","push","boxes","length","boxInd","cropSize","cropped","cast","upsize","outputs","kwargs","_this2","rankedInputs","inputShape","Math","floor","getConfig","config","baseConfig","_get","_getPrototypeOf","prototype","Object","assign","computeOutputShape","hAxis","wAxis","className","registerClass"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-layers\\src\\layers\\preprocessing\\center_crop.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {serialization,DataType,unstack,stack,tensor,Tensor,Tensor1D,Tensor2D, Tensor3D, Tensor4D, tidy, range, image} from '@tensorflow/tfjs-core';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../../utils/types_utils';\nimport {LayerArgs, Layer} from '../../engine/topology';\nimport {Kwargs} from '../../types';\nimport {Shape} from '../../keras_format/common';\nimport * as K from '../../backend/tfjs_backend';\n\nconst {resizeBilinear, cropAndResize} = image;\n\nexport declare interface CenterCropArgs extends LayerArgs{\n  height: number;\n  width: number;\n}\n\nexport class CenterCrop extends Layer {\n  /** @nocollapse */\n  static className = 'CenterCrop';\n  private readonly height: number;\n  private readonly width: number;\n  constructor(args: CenterCropArgs) {\n    super(args);\n    this.height = args.height;\n    this.width = args.width;\n  }\n\n  centerCrop(inputs: Tensor3D | Tensor4D, hBuffer: number, wBuffer: number,\n            height: number, width: number, inputHeight: number,\n            inputWidth: number, dtype: DataType): Tensor | Tensor[] {\n\n    return tidy(() => {\n      let input: Tensor4D;\n      let isRank3      = false;\n      const top      = hBuffer / inputHeight;\n      const left     = wBuffer / inputWidth;\n      const bottom   = ((height) + hBuffer) / inputHeight;\n      const right    = ((width) + wBuffer) / inputWidth;\n      const bound    = [top, left, bottom, right];\n      const boxesArr = [];\n\n      if(inputs.rank === 3) {\n        isRank3  = true;\n        input  = stack([inputs]) as Tensor4D;\n      } else {\n        input = inputs as Tensor4D;\n      }\n\n      for (let i = 0; i < input.shape[0]; i++) {\n        boxesArr.push(bound);\n      }\n\n      const boxes: Tensor2D  = tensor(boxesArr, [boxesArr.length, 4]);\n      const boxInd: Tensor1D = range(0, boxesArr.length, 1, 'int32');\n\n      const cropSize: [number, number] = [height, width];\n      const cropped = cropAndResize(input, boxes, boxInd, cropSize, 'nearest');\n\n      if(isRank3) {\n        return K.cast(getExactlyOneTensor(unstack(cropped)), dtype);\n      }\n      return K.cast(cropped, dtype);\n   });\n\n  }\n\n  upsize(inputs : Tensor3D | Tensor4D, height: number,\n         width: number, dtype: DataType): Tensor | Tensor[] {\n\n    return tidy(() => {\n      const outputs = resizeBilinear(inputs, [height, width]);\n      return K.cast(outputs, dtype);\n  });\n\n}\n\n  override call(inputs: Tensor3D | Tensor4D , kwargs: Kwargs):\n      Tensor[] | Tensor {\n    return tidy(() => {\n      const rankedInputs = getExactlyOneTensor(inputs) as Tensor3D | Tensor4D;\n      const dtype       = rankedInputs.dtype;\n      const inputShape  = rankedInputs.shape;\n      const inputHeight = inputShape[inputShape.length - 3];\n      const inputWidth  =  inputShape[inputShape.length - 2];\n\n      let hBuffer = 0;\n      if (inputHeight !== this.height) {\n        hBuffer =  Math.floor((inputHeight - this.height) / 2);\n      }\n\n      let wBuffer = 0;\n      if (inputWidth !== this.width) {\n        wBuffer = Math.floor((inputWidth - this.width) / 2);\n\n        if (wBuffer === 0) {\n          wBuffer = 1;\n        }\n      }\n\n      if(hBuffer >= 0 && wBuffer >= 0) {\n        return this.centerCrop(rankedInputs, hBuffer, wBuffer,\n                              this.height, this.width, inputHeight,\n                              inputWidth, dtype);\n      } else {\n        return this.upsize(inputs, this.height, this.width, dtype);\n      }\n   });\n\n  }\n\n  override getConfig(): serialization.ConfigDict{\n\n    const config: serialization.ConfigDict = {\n      'height' : this.height,\n      'width' : this.width\n    };\n\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  override computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const hAxis = inputShape.length - 3;\n    const wAxis = inputShape.length - 2;\n    inputShape[hAxis] = this.height;\n    inputShape[wAxis] = this.width;\n    return inputShape;\n  }\n}\n\nserialization.registerClass(CenterCrop);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}