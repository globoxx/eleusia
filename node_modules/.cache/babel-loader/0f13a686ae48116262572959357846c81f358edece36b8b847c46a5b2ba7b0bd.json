{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { assertAndGetBroadcastShape, getReductionAxes } from '../ops/broadcast_util';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { square } from '../ops/square';\nimport { sum } from '../ops/sum';\nexport var atan2GradConfig = {\n  kernelName: Atan2,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n      a = _saved[0],\n      b = _saved[1];\n    var outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n    var derA = function derA() {\n      var d = add(square(a), square(b));\n      var res = mul(dy, div(b, d));\n      var reduceAxes = getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, a.shape);\n    };\n    var derB = function derB() {\n      var d = add(square(a), square(b));\n      var res = neg(mul(dy, div(a, d)));\n      var reduceAxes = getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, b.shape);\n    };\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Atan2","add","assertAndGetBroadcastShape","getReductionAxes","div","mul","neg","reshape","square","sum","atan2GradConfig","kernelName","inputsToSave","gradFunc","dy","saved","_saved","_slicedToArray","a","b","outShape","shape","derA","d","res","reduceAxes","length","derB"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\Atan2_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan2} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {add} from '../ops/add';\nimport {assertAndGetBroadcastShape, getReductionAxes} from '../ops/broadcast_util';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {neg} from '../ops/neg';\nimport {reshape} from '../ops/reshape';\nimport {square} from '../ops/square';\nimport {sum} from '../ops/sum';\nimport {Tensor} from '../tensor';\n\nexport const atan2GradConfig: GradConfig = {\n  kernelName: Atan2,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n\n    const derA = () => {\n      const d = add(square(a), square(b));\n      let res = mul(dy, div(b, d));\n      const reduceAxes = getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, a.shape);\n    };\n    const derB = () => {\n      const d = add(square(a), square(b));\n      let res = neg(mul(dy, div(a, d)));\n      const reduceAxes = getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, b.shape);\n    };\n    return {a: derA, b: derB};\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,KAAK,QAAO,iBAAiB;AAErC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,0BAA0B,EAAEC,gBAAgB,QAAO,uBAAuB;AAClF,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,IAAMC,eAAe,GAAe;EACzCC,UAAU,EAAEX,KAAK;EACjBY,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAI;IACxC,IAAAC,MAAA,GAAAC,cAAA,CAAeF,KAAK;MAAbG,CAAC,GAAAF,MAAA;MAAEG,CAAC,GAAAH,MAAA;IACX,IAAMI,QAAQ,GAAGlB,0BAA0B,CAACgB,CAAC,CAACG,KAAK,EAAEF,CAAC,CAACE,KAAK,CAAC;IAE7D,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAQ;MAChB,IAAMC,CAAC,GAAGtB,GAAG,CAACO,MAAM,CAACU,CAAC,CAAC,EAAEV,MAAM,CAACW,CAAC,CAAC,CAAC;MACnC,IAAIK,GAAG,GAAGnB,GAAG,CAACS,EAAE,EAAEV,GAAG,CAACe,CAAC,EAAEI,CAAC,CAAC,CAAC;MAC5B,IAAME,UAAU,GAAGtB,gBAAgB,CAACe,CAAC,CAACG,KAAK,EAAED,QAAQ,CAAC;MACtD,IAAIK,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACzBF,GAAG,GAAGf,GAAG,CAACe,GAAG,EAAEC,UAAU,CAAC;;MAE5B,OAAOlB,OAAO,CAACiB,GAAG,EAAEN,CAAC,CAACG,KAAK,CAAC;IAC9B,CAAC;IACD,IAAMM,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAQ;MAChB,IAAMJ,CAAC,GAAGtB,GAAG,CAACO,MAAM,CAACU,CAAC,CAAC,EAAEV,MAAM,CAACW,CAAC,CAAC,CAAC;MACnC,IAAIK,GAAG,GAAGlB,GAAG,CAACD,GAAG,CAACS,EAAE,EAAEV,GAAG,CAACc,CAAC,EAAEK,CAAC,CAAC,CAAC,CAAC;MACjC,IAAME,UAAU,GAAGtB,gBAAgB,CAACgB,CAAC,CAACE,KAAK,EAAED,QAAQ,CAAC;MACtD,IAAIK,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACzBF,GAAG,GAAGf,GAAG,CAACe,GAAG,EAAEC,UAAU,CAAC;;MAE5B,OAAOlB,OAAO,CAACiB,GAAG,EAAEL,CAAC,CAACE,KAAK,CAAC;IAC9B,CAAC;IACD,OAAO;MAACH,CAAC,EAAEI,IAAI;MAAEH,CAAC,EAAEQ;IAAI,CAAC;EAC3B;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}