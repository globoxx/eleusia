{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n/**\r\n * Inputs of size above this threshold will be parallelized by calling multiple\r\n * shader programs.\r\n */\nimport { nearestDivisor } from '../util';\nexport var PARALLELIZE_THRESHOLD = 30;\nexport function computeOptimalWindowSize(inSize) {\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    return inSize;\n  }\n  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}","map":{"version":3,"names":["nearestDivisor","PARALLELIZE_THRESHOLD","computeOptimalWindowSize","inSize","Math","floor","sqrt"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\ops\\reduce_util.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nimport {nearestDivisor} from '../util';\n\nexport const PARALLELIZE_THRESHOLD = 30;\n\nexport interface ReduceInfo {\n  windowSize: number;\n  batchSize: number;\n  inSize: number;\n  outSize: number;\n}\n\nexport function computeOptimalWindowSize(inSize: number): number {\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    return inSize;\n  }\n  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;;;AAIA,SAAQA,cAAc,QAAO,SAAS;AAEtC,OAAO,IAAMC,qBAAqB,GAAG,EAAE;AASvC,OAAM,SAAUC,wBAAwBA,CAACC,MAAc;EACrD,IAAIA,MAAM,IAAIF,qBAAqB,EAAE;IACnC,OAAOE,MAAM;;EAEf,OAAOH,cAAc,CAACG,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}