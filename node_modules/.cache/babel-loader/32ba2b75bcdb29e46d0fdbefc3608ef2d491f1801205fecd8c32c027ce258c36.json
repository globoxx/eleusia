{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { MaxPool } from '../kernel_names';\nimport { maxPoolGrad } from '../ops/max_pool_grad';\nexport var maxPoolGradConfig = {\n  kernelName: MaxPool,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n      _x = _saved[0],\n      y = _saved[1];\n    var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad;\n    return {\n      x: function x() {\n        return maxPoolGrad(dy, _x, y, filterSize, strides, pad);\n      }\n    };\n  }\n};","map":{"version":3,"names":["MaxPool","maxPoolGrad","maxPoolGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","_saved","_slicedToArray","x","y","filterSize","strides","pad"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\MaxPool_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {MaxPool, MaxPoolAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {maxPoolGrad} from '../ops/max_pool_grad';\nimport {Tensor, Tensor4D} from '../tensor';\n\nexport const maxPoolGradConfig: GradConfig = {\n  kernelName: MaxPool,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x, y] = saved as [Tensor4D, Tensor4D];\n    const {filterSize, strides, pad} = attrs as unknown as MaxPoolAttrs;\n\n    return {\n      x: () => maxPoolGrad(dy as Tensor4D, x, y, filterSize, strides, pad)\n    };\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAqB,iBAAiB;AAErD,SAAQC,WAAW,QAAO,sBAAsB;AAGhD,OAAO,IAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEH,OAAO;EACnBI,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,IAAAC,MAAA,GAAAC,cAAA,CAAeH,KAA6B;MAArCI,EAAC,GAAAF,MAAA;MAAEG,CAAC,GAAAH,MAAA;IACX,IAAOI,UAAU,GAAkBL,KAAgC,CAA5DK,UAAU;MAAEC,OAAO,GAASN,KAAgC,CAAhDM,OAAO;MAAEC,GAAG,GAAIP,KAAgC,CAAvCO,GAAG;IAE/B,OAAO;MACLJ,CAAC,EAAE,SAAAA,EAAA;QAAA,OAAMX,WAAW,CAACM,EAAc,EAAEK,EAAC,EAAEC,CAAC,EAAEC,UAAU,EAAEC,OAAO,EAAEC,GAAG,CAAC;MAAA;KACrE;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}