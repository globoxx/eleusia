{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Cumsum } from '../kernel_names';\nimport { getAxesPermutation } from '../ops/axis_util';\nimport { cumsum } from '../ops/cumsum';\nimport { transpose } from '../ops/transpose';\nexport var cumsumGradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n      _x = _saved[0];\n    var axis = attrs.axis,\n      exclusive = attrs.exclusive,\n      reverse = attrs.reverse;\n    return {\n      x: function x() {\n        var permutation = getAxesPermutation([axis], _x.rank);\n        var out = cumsum(dy, axis, exclusive, !reverse);\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n        return out;\n      }\n    };\n  }\n};","map":{"version":3,"names":["Cumsum","getAxesPermutation","cumsum","transpose","cumsumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","_saved","_slicedToArray","x","axis","exclusive","reverse","permutation","rank","out"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\Cumsum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cumsum, CumsumAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {getAxesPermutation} from '../ops/axis_util';\nimport {cumsum} from '../ops/cumsum';\nimport {transpose} from '../ops/transpose';\nimport {Tensor} from '../tensor';\n\nexport const cumsumGradConfig: GradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {axis, exclusive, reverse}: CumsumAttrs =\n        attrs as unknown as CumsumAttrs;\n\n    return {\n      x: () => {\n        const permutation = getAxesPermutation([axis], x.rank);\n\n        let out = cumsum(dy, axis, exclusive, !reverse);\n\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n\n        return out;\n      }\n    };\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAoB,iBAAiB;AAEnD,SAAQC,kBAAkB,QAAO,kBAAkB;AACnD,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,SAAS,QAAO,kBAAkB;AAG1C,OAAO,IAAMC,gBAAgB,GAAe;EAC1CC,UAAU,EAAEL,MAAM;EAClBM,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,IAAAC,MAAA,GAAAC,cAAA,CAAYH,KAAK;MAAVI,EAAC,GAAAF,MAAA;IACR,IAAOG,IAAI,GACPJ,KAA+B,CAD5BI,IAAI;MAAEC,SAAS,GAClBL,KAA+B,CADtBK,SAAS;MAAEC,OAAO,GAC3BN,KAA+B,CADXM,OAAO;IAG/B,OAAO;MACLH,CAAC,EAAE,SAAAA,EAAA,EAAK;QACN,IAAMI,WAAW,GAAGhB,kBAAkB,CAAC,CAACa,IAAI,CAAC,EAAED,EAAC,CAACK,IAAI,CAAC;QAEtD,IAAIC,GAAG,GAAGjB,MAAM,CAACM,EAAE,EAAEM,IAAI,EAAEC,SAAS,EAAE,CAACC,OAAO,CAAC;QAE/C,IAAIC,WAAW,IAAI,IAAI,EAAE;UACvBE,GAAG,GAAGhB,SAAS,CAACgB,GAAG,EAAEF,WAAW,CAAC;;QAGnC,OAAOE,GAAG;MACZ;KACD;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}