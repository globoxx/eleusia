{"ast":null,"code":"import _toConsumableArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport var spaceToBatchND = function spaceToBatchND(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var x = inputs.x;\n  var blockShape = attrs.blockShape,\n    paddings = attrs.paddings;\n  util.assert(x.shape.length <= 4, function () {\n    return 'spaceToBatchND for rank > 4 with a WebGL backend not ' + 'implemented yet';\n  });\n  var prod = blockShape.reduce(function (a, b) {\n    return a * b;\n  });\n  var completePaddings = [[0, 0]];\n  completePaddings.push.apply(completePaddings, _toConsumableArray(paddings));\n  for (var i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n  var toDispose = [];\n  var paddedX = padV2({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  var reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  var permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  var flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  var reshapedPaddedX = reshape({\n    inputs: {\n      x: paddedX\n    },\n    backend: backend,\n    attrs: {\n      shape: reshapedPaddedShape\n    }\n  });\n  var paddedXT = transpose({\n    inputs: {\n      x: reshapedPaddedX\n    },\n    backend: backend,\n    attrs: {\n      perm: permutedReshapedPaddedPermutation\n    }\n  });\n  var result = reshape({\n    inputs: {\n      x: paddedXT\n    },\n    backend: backend,\n    attrs: {\n      shape: flattenShape\n    }\n  });\n  toDispose.push(paddedX);\n  toDispose.push(reshapedPaddedX);\n  toDispose.push(paddedXT);\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n};\nexport var spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'webgl',\n  kernelFunc: spaceToBatchND\n};","map":{"version":3,"names":["backend_util","SpaceToBatchND","util","padV2","reshape","transpose","spaceToBatchND","args","inputs","backend","attrs","x","blockShape","paddings","assert","shape","length","prod","reduce","a","b","completePaddings","push","apply","_toConsumableArray","i","toDispose","paddedX","constantValue","reshapedPaddedShape","getReshaped","permutedReshapedPaddedPermutation","getPermuted","flattenShape","getReshapedPermuted","reshapedPaddedX","paddedXT","perm","result","forEach","t","disposeIntermediateTensorInfo","spaceToBatchNDConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\kernels\\SpaceToBatchND.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nimport {padV2} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport const spaceToBatchND = (args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: MathBackendWebGL,\n  attrs: SpaceToBatchNDAttrs\n}): TensorInfo => {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  util.assert(\n      x.shape.length <= 4,\n      () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n          'implemented yet');\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...paddings as Array<[number, number]>);\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const toDispose = [];\n\n  const paddedX = padV2({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  });\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapedPaddedX = reshape(\n      {inputs: {x: paddedX}, backend, attrs: {shape: reshapedPaddedShape}});\n\n  const paddedXT = transpose({\n    inputs: {x: reshapedPaddedX},\n    backend,\n    attrs: {perm: permutedReshapedPaddedPermutation}\n  });\n\n  const result =\n      reshape({inputs: {x: paddedXT}, backend, attrs: {shape: flattenShape}});\n\n  toDispose.push(paddedX);\n  toDispose.push(reshapedPaddedX);\n  toDispose.push(paddedXT);\n\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n\n  return result;\n};\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'webgl',\n  kernelFunc: spaceToBatchND as unknown as KernelFunc\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAA4BC,cAAc,EAAyDC,IAAI,QAAO,uBAAuB;AAIzJ,SAAQC,KAAK,QAAO,SAAS;AAC7B,SAAQC,OAAO,QAAO,WAAW;AACjC,SAAQC,SAAS,QAAO,aAAa;AAErC,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAI9B,EAAgB;EACf,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAOC,UAAU,GAAcF,KAAK,CAA7BE,UAAU;IAAEC,QAAQ,GAAIH,KAAK,CAAjBG,QAAQ;EAE3BX,IAAI,CAACY,MAAM,CACPH,CAAC,CAACI,KAAK,CAACC,MAAM,IAAI,CAAC,EACnB;IAAA,OAAM,uDAAuD,GACzD,iBAAiB;EAAA,EAAC;EAE1B,IAAMC,IAAI,GAAGL,UAAU,CAACM,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,GAAGC,CAAC;EAAA,EAAC;EAE/C,IAAMC,gBAAgB,GAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1DA,gBAAgB,CAACC,IAAI,CAAAC,KAAA,CAArBF,gBAAgB,EAAAG,kBAAA,CAASX,QAAmC,EAAC;EAC7D,KAAK,IAAIY,CAAC,GAAG,CAAC,GAAGb,UAAU,CAACI,MAAM,EAAES,CAAC,GAAGd,CAAC,CAACI,KAAK,CAACC,MAAM,EAAE,EAAES,CAAC,EAAE;IAC3DJ,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG/B,IAAMI,SAAS,GAAG,EAAE;EAEpB,IAAMC,OAAO,GAAGxB,KAAK,CAAC;IACpBK,MAAM,EAAE;MAACG,CAAC,EAADA;IAAC,CAAC;IACXF,OAAO,EAAPA,OAAO;IACPC,KAAK,EAAE;MAACG,QAAQ,EAAEQ,gBAAgB;MAAEO,aAAa,EAAE;IAAC;GACrD,CAAC;EAEF,IAAMC,mBAAmB,GACrB7B,YAAY,CAAC8B,WAAW,CAACH,OAAO,CAACZ,KAAK,EAAEH,UAAU,EAAEK,IAAI,EAAE,KAAK,CAAC;EAEpE,IAAMc,iCAAiC,GAAG/B,YAAY,CAACgC,WAAW,CAC9DH,mBAAmB,CAACb,MAAM,EAAEJ,UAAU,CAACI,MAAM,EAAE,KAAK,CAAC;EAEzD,IAAMiB,YAAY,GACdjC,YAAY,CAACkC,mBAAmB,CAACP,OAAO,CAACZ,KAAK,EAAEH,UAAU,EAAEK,IAAI,EAAE,KAAK,CAAC;EAE5E,IAAMkB,eAAe,GAAG/B,OAAO,CAC3B;IAACI,MAAM,EAAE;MAACG,CAAC,EAAEgB;IAAO,CAAC;IAAElB,OAAO,EAAPA,OAAO;IAAEC,KAAK,EAAE;MAACK,KAAK,EAAEc;IAAmB;EAAC,CAAC,CAAC;EAEzE,IAAMO,QAAQ,GAAG/B,SAAS,CAAC;IACzBG,MAAM,EAAE;MAACG,CAAC,EAAEwB;IAAe,CAAC;IAC5B1B,OAAO,EAAPA,OAAO;IACPC,KAAK,EAAE;MAAC2B,IAAI,EAAEN;IAAiC;GAChD,CAAC;EAEF,IAAMO,MAAM,GACRlC,OAAO,CAAC;IAACI,MAAM,EAAE;MAACG,CAAC,EAAEyB;IAAQ,CAAC;IAAE3B,OAAO,EAAPA,OAAO;IAAEC,KAAK,EAAE;MAACK,KAAK,EAAEkB;IAAY;EAAC,CAAC,CAAC;EAE3EP,SAAS,CAACJ,IAAI,CAACK,OAAO,CAAC;EACvBD,SAAS,CAACJ,IAAI,CAACa,eAAe,CAAC;EAC/BT,SAAS,CAACJ,IAAI,CAACc,QAAQ,CAAC;EAExBV,SAAS,CAACa,OAAO,CAAC,UAAAC,CAAC;IAAA,OAAI/B,OAAO,CAACgC,6BAA6B,CAACD,CAAC,CAAC;EAAA,EAAC;EAEhE,OAAOF,MAAM;AACf,CAAC;AAED,OAAO,IAAMI,oBAAoB,GAAiB;EAChDC,UAAU,EAAE1C,cAAc;EAC1B2C,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEvC;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}