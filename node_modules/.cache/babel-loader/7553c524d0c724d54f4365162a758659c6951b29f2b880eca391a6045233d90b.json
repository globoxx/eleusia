{"ast":null,"code":"import _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\r\n * @license\r\n * Copyright 2022 CodeSmith LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\nimport { Layer } from '../../engine/topology';\nimport { serialization, mul, add, tidy } from '@tensorflow/tfjs-core';\nimport { getExactlyOneTensor } from '../../utils/types_utils';\nimport * as K from '../../backend/tfjs_backend';\n/**\r\n * Preprocessing Rescaling Layer\r\n *\r\n * This rescales images by a scaling and offset factor\r\n */\nexport var Rescaling = /*#__PURE__*/function (_Layer) {\n  _inherits(Rescaling, _Layer);\n  var _super = _createSuper(Rescaling);\n  function Rescaling(args) {\n    var _this;\n    _classCallCheck(this, Rescaling);\n    _this = _super.call(this, args);\n    _this.scale = args.scale;\n    if (args.offset) {\n      _this.offset = args.offset;\n    } else {\n      _this.offset = 0;\n    }\n    return _this;\n  }\n  _createClass(Rescaling, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'scale': this.scale,\n        'offset': this.offset\n      };\n      var baseConfig = _get(_getPrototypeOf(Rescaling.prototype), \"getConfig\", this).call(this);\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        if (inputs.dtype !== 'float32') {\n          inputs = K.cast(inputs, 'float32');\n        }\n        return add(mul(inputs, _this2.scale), _this2.offset);\n      });\n    }\n  }]);\n  return Rescaling;\n}(Layer);\n/** @nocollapse */\nRescaling.className = 'Rescaling';\nserialization.registerClass(Rescaling);","map":{"version":3,"names":["Layer","serialization","mul","add","tidy","getExactlyOneTensor","K","Rescaling","_Layer","_inherits","_super","_createSuper","args","_this","_classCallCheck","call","scale","offset","_createClass","key","value","getConfig","config","baseConfig","_get","_getPrototypeOf","prototype","Object","assign","inputs","kwargs","_this2","dtype","cast","className","registerClass"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-layers\\src\\layers\\preprocessing\\image_preprocessing.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {LayerArgs, Layer} from '../../engine/topology';\nimport { serialization, Tensor, mul, add, tidy } from '@tensorflow/tfjs-core';\nimport { getExactlyOneTensor } from '../../utils/types_utils';\nimport * as K from '../../backend/tfjs_backend';\nimport { Kwargs } from '../../types';\n\nexport declare interface RescalingArgs extends LayerArgs {\n  scale: number;\n  offset?: number;\n}\n\n/**\n * Preprocessing Rescaling Layer\n *\n * This rescales images by a scaling and offset factor\n */\nexport class Rescaling extends Layer {\n  /** @nocollapse */\n  static className = 'Rescaling';\n  private readonly scale: number;\n  private readonly offset: number;\n  constructor(args: RescalingArgs) {\n    super(args);\n\n    this.scale = args.scale;\n\n    if(args.offset) {\n    this.offset = args.offset;\n    } else {\n      this.offset = 0;\n    }\n  }\n\n  override getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'scale': this.scale,\n      'offset': this.offset\n    };\n\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  override call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor[]|Tensor {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n      if(inputs.dtype !== 'float32') {\n          inputs = K.cast(inputs, 'float32');\n      }\n      return add(mul(inputs, this.scale), this.offset);\n    });\n  }\n}\n\nserialization.registerClass(Rescaling);\n"],"mappings":";;;;;;AAAA;;;;;;;;;AAUA,SAAmBA,KAAK,QAAO,uBAAuB;AACtD,SAASC,aAAa,EAAUC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,uBAAuB;AAC7E,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,OAAO,KAAKC,CAAC,MAAM,4BAA4B;AAQ/C;;;;;AAKA,WAAaC,SAAU,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAKrB,SAAAA,UAAYK,IAAmB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,SAAA;IAC7BM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,IAAI;IAEVC,KAAA,CAAKG,KAAK,GAAGJ,IAAI,CAACI,KAAK;IAEvB,IAAGJ,IAAI,CAACK,MAAM,EAAE;MAChBJ,KAAA,CAAKI,MAAM,GAAGL,IAAI,CAACK,MAAM;KACxB,MAAM;MACLJ,KAAA,CAAKI,MAAM,GAAG,CAAC;;IAChB,OAAAJ,KAAA;EACH;EAACK,YAAA,CAAAX,SAAA;IAAAY,GAAA;IAAAC,KAAA,EAEQ,SAAAC,UAAA,EAAS;MAChB,IAAMC,MAAM,GAA6B;QACvC,OAAO,EAAE,IAAI,CAACN,KAAK;QACnB,QAAQ,EAAE,IAAI,CAACC;OAChB;MAED,IAAMM,UAAU,GAAAC,IAAA,CAAAC,eAAA,CAAAlB,SAAA,CAAAmB,SAAA,sBAAAX,IAAA,MAAoB;MACpCY,MAAM,CAACC,MAAM,CAACN,MAAM,EAAEC,UAAU,CAAC;MACjC,OAAOD,MAAM;IACf;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAEQ,SAAAL,KAAKc,MAAuB,EAAEC,MAAc;MAAA,IAAAC,MAAA;MACnD,OAAO3B,IAAI,CAAC,YAAK;QACfyB,MAAM,GAAGxB,mBAAmB,CAACwB,MAAM,CAAC;QACpC,IAAGA,MAAM,CAACG,KAAK,KAAK,SAAS,EAAE;UAC3BH,MAAM,GAAGvB,CAAC,CAAC2B,IAAI,CAACJ,MAAM,EAAE,SAAS,CAAC;;QAEtC,OAAO1B,GAAG,CAACD,GAAG,CAAC2B,MAAM,EAAEE,MAAI,CAACf,KAAK,CAAC,EAAEe,MAAI,CAACd,MAAM,CAAC;MAClD,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAV,SAAA;AAAA,EApC4BP,KAAK;AAClC;AACOO,SAAA,CAAA2B,SAAS,GAAG,WAAW;AAqChCjC,aAAa,CAACkC,aAAa,CAAC5B,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}