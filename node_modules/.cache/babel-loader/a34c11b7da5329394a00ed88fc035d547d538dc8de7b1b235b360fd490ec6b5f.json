{"ast":null,"code":"import _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { Layer } from './topology';\nimport { RandomSeed } from '../backend/random_seed';\nexport var BaseRandomLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(BaseRandomLayer, _Layer);\n  var _super = _createSuper(BaseRandomLayer);\n  function BaseRandomLayer(args) {\n    var _this;\n    _classCallCheck(this, BaseRandomLayer);\n    _this = _super.call(this, args);\n    _this.randomGenerator = new RandomSeed(args.seed);\n    return _this;\n  }\n  _createClass(BaseRandomLayer, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'seed': this.randomGenerator.seed\n      };\n      var baseConfig = _get(_getPrototypeOf(BaseRandomLayer.prototype), \"getConfig\", this).call(this);\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n  return BaseRandomLayer;\n}(Layer);\n// A layer handle the random number creation and savemodel behavior.\n/** @nocollapse */\nBaseRandomLayer.className = 'BaseRandomLayer';","map":{"version":3,"names":["Layer","RandomSeed","BaseRandomLayer","_Layer","_inherits","_super","_createSuper","args","_this","_classCallCheck","call","randomGenerator","seed","_createClass","key","value","getConfig","config","baseConfig","_get","_getPrototypeOf","prototype","Object","assign","className"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-layers\\src\\engine\\base_random_layer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport { LayerArgs, Layer } from './topology';\nimport { RandomSeed } from '../backend/random_seed';\nimport { serialization } from '@tensorflow/tfjs-core';\n\nexport declare interface BaseRandomLayerArgs extends LayerArgs {\n  seed?: number;\n}\n\nexport abstract class BaseRandomLayer extends Layer {\n  // A layer handle the random number creation and savemodel behavior.\n  /** @nocollapse */\n  static className = 'BaseRandomLayer';\n  protected randomGenerator: RandomSeed;\n\n  constructor(args: BaseRandomLayerArgs) {\n    super(args);\n    this.randomGenerator = new RandomSeed(args.seed);\n  }\n\n  override getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'seed': this.randomGenerator.seed\n    };\n\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n"],"mappings":";;;;;;AAAA;;;;;;;;;AAUA,SAAoBA,KAAK,QAAQ,YAAY;AAC7C,SAASC,UAAU,QAAQ,wBAAwB;AAOnD,WAAsBC,eAAgB,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAMpC,SAAAA,gBAAYK,IAAyB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,eAAA;IACnCM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,IAAI;IACVC,KAAA,CAAKG,eAAe,GAAG,IAAIV,UAAU,CAACM,IAAI,CAACK,IAAI,CAAC;IAAC,OAAAJ,KAAA;EACnD;EAACK,YAAA,CAAAX,eAAA;IAAAY,GAAA;IAAAC,KAAA,EAEQ,SAAAC,UAAA,EAAS;MAChB,IAAMC,MAAM,GAA6B;QACvC,MAAM,EAAE,IAAI,CAACN,eAAe,CAACC;OAC9B;MAED,IAAMM,UAAU,GAAAC,IAAA,CAAAC,eAAA,CAAAlB,eAAA,CAAAmB,SAAA,sBAAAX,IAAA,MAAoB;MACpCY,MAAM,CAACC,MAAM,CAACN,MAAM,EAAEC,UAAU,CAAC;MACjC,OAAOD,MAAM;IACf;EAAC;EAAA,OAAAf,eAAA;AAAA,EAnB2CF,KAAK;AACjD;AACA;AACOE,eAAA,CAAAsB,SAAS,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}