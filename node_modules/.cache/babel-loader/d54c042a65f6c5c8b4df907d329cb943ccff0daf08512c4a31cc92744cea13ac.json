{"ast":null,"code":"import _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { RingBuffer } from './ring_buffer';\nexport var GrowingRingBuffer = /*#__PURE__*/function (_RingBuffer) {\n  _inherits(GrowingRingBuffer, _RingBuffer);\n  var _super = _createSuper(GrowingRingBuffer);\n  /**\n   * Constructs a `GrowingRingBuffer`.\n   */\n  function GrowingRingBuffer() {\n    _classCallCheck(this, GrowingRingBuffer);\n    return _super.call(this, GrowingRingBuffer.INITIAL_CAPACITY);\n  }\n  _createClass(GrowingRingBuffer, [{\n    key: \"isFull\",\n    value: function isFull() {\n      return false;\n    }\n  }, {\n    key: \"push\",\n    value: function push(value) {\n      if (_get(_getPrototypeOf(GrowingRingBuffer.prototype), \"isFull\", this).call(this)) {\n        this.expand();\n      }\n      _get(_getPrototypeOf(GrowingRingBuffer.prototype), \"push\", this).call(this, value);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(value) {\n      if (_get(_getPrototypeOf(GrowingRingBuffer.prototype), \"isFull\", this).call(this)) {\n        this.expand();\n      }\n      _get(_getPrototypeOf(GrowingRingBuffer.prototype), \"unshift\", this).call(this, value);\n    }\n    /**\n     * Doubles the capacity of the buffer.\n     */\n  }, {\n    key: \"expand\",\n    value: function expand() {\n      var newCapacity = this.capacity * 2;\n      var newData = new Array(newCapacity);\n      var len = this.length();\n      // Rotate the buffer to start at index 0 again, since we can't just\n      // allocate more space at the end.\n      for (var i = 0; i < len; i++) {\n        newData[i] = this.get(this.wrap(this.begin + i));\n      }\n      this.data = newData;\n      this.capacity = newCapacity;\n      this.doubledCapacity = 2 * this.capacity;\n      this.begin = 0;\n      this.end = len;\n    }\n  }]);\n  return GrowingRingBuffer;\n}(RingBuffer);\nGrowingRingBuffer.INITIAL_CAPACITY = 32;","map":{"version":3,"names":["RingBuffer","GrowingRingBuffer","_RingBuffer","_inherits","_super","_createSuper","_classCallCheck","call","INITIAL_CAPACITY","_createClass","key","value","isFull","push","_get","_getPrototypeOf","prototype","expand","unshift","newCapacity","capacity","newData","Array","len","length","i","get","wrap","begin","data","doubledCapacity","end"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-data\\src\\util\\growing_ring_buffer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport {RingBuffer} from './ring_buffer';\n\nexport class GrowingRingBuffer<T> extends RingBuffer<T> {\n  private static INITIAL_CAPACITY = 32;\n\n  /**\n   * Constructs a `GrowingRingBuffer`.\n   */\n  constructor() {\n    super(GrowingRingBuffer.INITIAL_CAPACITY);\n  }\n\n  override isFull() {\n    return false;\n  }\n\n  override push(value: T) {\n    if (super.isFull()) {\n      this.expand();\n    }\n    super.push(value);\n  }\n\n  override unshift(value: T) {\n    if (super.isFull()) {\n      this.expand();\n    }\n    super.unshift(value);\n  }\n\n  /**\n   * Doubles the capacity of the buffer.\n   */\n  private expand() {\n    const newCapacity = this.capacity * 2;\n    const newData = new Array<T>(newCapacity);\n    const len = this.length();\n\n    // Rotate the buffer to start at index 0 again, since we can't just\n    // allocate more space at the end.\n    for (let i = 0; i < len; i++) {\n      newData[i] = this.get(this.wrap(this.begin + i));\n    }\n\n    this.data = newData;\n    this.capacity = newCapacity;\n    this.doubledCapacity = 2 * this.capacity;\n    this.begin = 0;\n    this.end = len;\n  }\n}\n"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;AAkBA,SAAQA,UAAU,QAAO,eAAe;AAExC,WAAaC,iBAAqB,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EAGhC;;;EAGA,SAAAA,kBAAA;IAAAK,eAAA,OAAAL,iBAAA;IAAA,OAAAG,MAAA,CAAAG,IAAA,OACQN,iBAAiB,CAACO,gBAAgB;EAC1C;EAACC,YAAA,CAAAR,iBAAA;IAAAS,GAAA;IAAAC,KAAA,EAEQ,SAAAC,OAAA,EAAM;MACb,OAAO,KAAK;IACd;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAEQ,SAAAE,KAAKF,KAAQ;MACpB,IAAAG,IAAA,CAAAC,eAAA,CAAAd,iBAAA,CAAAe,SAAA,mBAAAT,IAAA,QAAoB;QAClB,IAAI,CAACU,MAAM,EAAE;;MAEfH,IAAA,CAAAC,eAAA,CAAAd,iBAAA,CAAAe,SAAA,iBAAAT,IAAA,OAAWI,KAAK;IAClB;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAEQ,SAAAO,QAAQP,KAAQ;MACvB,IAAAG,IAAA,CAAAC,eAAA,CAAAd,iBAAA,CAAAe,SAAA,mBAAAT,IAAA,QAAoB;QAClB,IAAI,CAACU,MAAM,EAAE;;MAEfH,IAAA,CAAAC,eAAA,CAAAd,iBAAA,CAAAe,SAAA,oBAAAT,IAAA,OAAcI,KAAK;IACrB;IAEA;;;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAGQ,SAAAM,OAAA,EAAM;MACZ,IAAME,WAAW,GAAG,IAAI,CAACC,QAAQ,GAAG,CAAC;MACrC,IAAMC,OAAO,GAAG,IAAIC,KAAK,CAAIH,WAAW,CAAC;MACzC,IAAMI,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;MAEzB;MACA;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;QAC5BJ,OAAO,CAACI,CAAC,CAAC,GAAG,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,GAAGH,CAAC,CAAC,CAAC;;MAGlD,IAAI,CAACI,IAAI,GAAGR,OAAO;MACnB,IAAI,CAACD,QAAQ,GAAGD,WAAW;MAC3B,IAAI,CAACW,eAAe,GAAG,CAAC,GAAG,IAAI,CAACV,QAAQ;MACxC,IAAI,CAACQ,KAAK,GAAG,CAAC;MACd,IAAI,CAACG,GAAG,GAAGR,GAAG;IAChB;EAAC;EAAA,OAAAtB,iBAAA;AAAA,EA/CuCD,UAAa;AACtCC,iBAAA,CAAAO,gBAAgB,GAAG,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}