{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util, Conv2DBackpropInput, env } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from '../conv_backprop_gpu';\nimport { Conv2DDerInputPackedProgram } from '../conv_backprop_packed_gpu';\nexport function conv2DBackpropInput(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var dy = inputs.dy,\n    filter = inputs.filter;\n  var inputShape = attrs.inputShape,\n    strides = attrs.strides,\n    pad = attrs.pad,\n    dataFormat = attrs.dataFormat,\n    dimRoundingMode = attrs.dimRoundingMode;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n  if (env().getBool('WEBGL_PACK') && $dataFormat === 'channelsLast') {\n    var customValues = [[convInfo.strideHeight, convInfo.strideWidth]];\n    var program = new Conv2DDerInputPackedProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32', customValues);\n  } else {\n    var _program = new Conv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(_program, [dy, filter], 'float32');\n  }\n}\nexport var conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput\n};","map":{"version":3,"names":["backend_util","Conv2DBackpropInput","env","Conv2DDerInputProgram","Conv2DDerInputPackedProgram","conv2DBackpropInput","args","inputs","backend","attrs","dy","filter","inputShape","strides","pad","dataFormat","dimRoundingMode","$dataFormat","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","getBool","customValues","strideHeight","strideWidth","program","runWebGLProgram","conv2DBackpropInputConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\kernels\\Conv2DBackpropInput.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, env, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {Conv2DDerInputProgram} from '../conv_backprop_gpu';\nimport {Conv2DDerInputPackedProgram} from '../conv_backprop_packed_gpu';\n\nexport function conv2DBackpropInput(args: {\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {inputShape, strides, pad, dataFormat, dimRoundingMode} = attrs;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n\n  if (env().getBool('WEBGL_PACK') && $dataFormat === 'channelsLast') {\n    const customValues = [\n      [convInfo.strideHeight, convInfo.strideWidth],\n    ];\n    const program = new Conv2DDerInputPackedProgram(convInfo);\n    return backend.runWebGLProgram(\n        program, [dy, filter], 'float32', customValues);\n  } else {\n    const program = new Conv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n  }\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput as unknown as KernelFunc,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,mBAAmB,EAAuDC,GAAG,QAAiC,uBAAuB;AAG3J,SAAQC,qBAAqB,QAAO,sBAAsB;AAC1D,SAAQC,2BAA2B,QAAO,6BAA6B;AAEvE,OAAM,SAAUC,mBAAmBA,CAACC,IAInC;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,EAAE,GAAYH,MAAM,CAApBG,EAAE;IAAEC,MAAM,GAAIJ,MAAM,CAAhBI,MAAM;EACjB,IAAOC,UAAU,GAA+CH,KAAK,CAA9DG,UAAU;IAAEC,OAAO,GAAsCJ,KAAK,CAAlDI,OAAO;IAAEC,GAAG,GAAiCL,KAAK,CAAzCK,GAAG;IAAEC,UAAU,GAAqBN,KAAK,CAApCM,UAAU;IAAEC,eAAe,GAAIP,KAAK,CAAxBO,eAAe;EAE5D,IAAMC,WAAW,GAAGjB,YAAY,CAACkB,uBAAuB,CAACH,UAAU,CAAC;EACpE,IAAMI,QAAQ,GAAGnB,YAAY,CAACoB,iBAAiB,CAC3CR,UAAU,EAAED,MAAM,CAACU,KAAyC,EAAER,OAAO,EACrE,CAAC,CAAC,iBAAiBC,GAAG,EAAEE,eAAe,EAAE,KAAK,EAAEC,WAAW,CAAC;EAEhE,IAAIf,GAAG,EAAE,CAACoB,OAAO,CAAC,YAAY,CAAC,IAAIL,WAAW,KAAK,cAAc,EAAE;IACjE,IAAMM,YAAY,GAAG,CACnB,CAACJ,QAAQ,CAACK,YAAY,EAAEL,QAAQ,CAACM,WAAW,CAAC,CAC9C;IACD,IAAMC,OAAO,GAAG,IAAItB,2BAA2B,CAACe,QAAQ,CAAC;IACzD,OAAOX,OAAO,CAACmB,eAAe,CAC1BD,OAAO,EAAE,CAAChB,EAAE,EAAEC,MAAM,CAAC,EAAE,SAAS,EAAEY,YAAY,CAAC;GACpD,MAAM;IACL,IAAMG,QAAO,GAAG,IAAIvB,qBAAqB,CAACgB,QAAQ,CAAC;IACnD,OAAOX,OAAO,CAACmB,eAAe,CAACD,QAAO,EAAE,CAAChB,EAAE,EAAEC,MAAM,CAAC,EAAE,SAAS,CAAC;;AAEpE;AAEA,OAAO,IAAMiB,yBAAyB,GAAiB;EACrDC,UAAU,EAAE5B,mBAAmB;EAC/B6B,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE1B;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}