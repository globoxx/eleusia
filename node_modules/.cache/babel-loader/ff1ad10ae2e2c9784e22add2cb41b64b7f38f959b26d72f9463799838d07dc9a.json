{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { ZerosLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\r\n * given tensor.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2]);\r\n * tf.zerosLike(x).print();\r\n * ```\r\n *\r\n * @param x The tensor of required shape.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nfunction zerosLike_(x) {\n  var $x = convertToTensor(x, 'x', 'zerosLike');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(ZerosLike, inputs);\n}\nexport var zerosLike = /* @__PURE__ */op({\n  zerosLike_: zerosLike_\n});","map":{"version":3,"names":["ENGINE","ZerosLike","convertToTensor","op","zerosLike_","x","$x","inputs","runKernel","zerosLike"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\ops\\zeros_like.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ZerosLike, ZerosLikeInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'zerosLike');\n  const inputs: ZerosLikeInputs = {x: $x};\n  return ENGINE.runKernel(ZerosLike, inputs as unknown as NamedTensorMap);\n}\nexport const zerosLike = /* @__PURE__ */ op({zerosLike_});\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,SAAS,QAAwB,iBAAiB;AAG1D,SAAQC,eAAe,QAAO,oBAAoB;AAGlD,SAAQC,EAAE,QAAO,aAAa;AAE9B;;;;;;;;;;;;;AAaA,SAASC,UAAUA,CAAmBC,CAAe;EACnD,IAAMC,EAAE,GAAGJ,eAAe,CAACG,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC;EAC/C,IAAME,MAAM,GAAoB;IAACF,CAAC,EAAEC;EAAE,CAAC;EACvC,OAAON,MAAM,CAACQ,SAAS,CAACP,SAAS,EAAEM,MAAmC,CAAC;AACzE;AACA,OAAO,IAAME,SAAS,GAAG,eAAgBN,EAAE,CAAC;EAACC,UAAU,EAAVA;AAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}