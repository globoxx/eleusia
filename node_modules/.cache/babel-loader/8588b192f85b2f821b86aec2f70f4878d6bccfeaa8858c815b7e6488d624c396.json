{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import*as tf from'@tensorflow/tfjs';var CLASS_NAMES=[\"Refused\",\"Accepted\"];// Put your class names here\nvar MyModel={featureExtractor:null,model:null,loadFeatureExtractor:function(){var _loadFeatureExtractor=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var URL;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:URL='https://tfhub.dev/google/tfjs-model/imagenet/mobilenet_v3_small_100_224/feature_vector/5/default/1';_context.next=3;return tf.loadGraphModel(URL,{fromTFHub:true});case 3:MyModel.featureExtractor=_context.sent;console.log('Feature extractor loaded');case 5:case\"end\":return _context.stop();}},_callee);}));function loadFeatureExtractor(){return _loadFeatureExtractor.apply(this,arguments);}return loadFeatureExtractor;}(),loadModel:function loadModel(){MyModel.model=tf.sequential();MyModel.model.add(tf.layers.dense({inputShape:[1024],units:128,activation:'relu'}));MyModel.model.add(tf.layers.dense({units:CLASS_NAMES.length,activation:'softmax'}));MyModel.model.compile({optimizer:'adam',loss:CLASS_NAMES.length===2?'binaryCrossentropy':'categoricalCrossentropy',metrics:['accuracy']});console.log('Model loaded');},resetModel:function resetModel(){MyModel.loadModel();},preprocessImage:function preprocessImage(image){var tensor=tf.browser.fromPixels(image).resizeBilinear([224,224]).div(255.0).expandDims();if(MyModel.featureExtractor){return MyModel.featureExtractor.predict(tensor).squeeze();}throw new Error(\"Feature extractor not loaded\");},trainModel:function(){var _trainModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(images,labels){var xs,ys;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:xs=tf.stack(images.map(function(image){return MyModel.preprocessImage(image);}));ys=tf.oneHot(tf.tensor1d(labels,'int32'),CLASS_NAMES.length);if(!MyModel.model){_context2.next=10;break;}_context2.next=5;return MyModel.model.fit(xs,ys,{epochs:10,shuffle:true});case 5:xs.dispose();ys.dispose();console.log('Model trained');_context2.next=11;break;case 10:throw new Error(\"Model not loaded\");case 11:case\"end\":return _context2.stop();}},_callee2);}));function trainModel(_x,_x2){return _trainModel.apply(this,arguments);}return trainModel;}(),predictImage:function predictImage(image){var imageFeatures=MyModel.preprocessImage(image);if(MyModel.model){var predictionLabel=MyModel.model.predict(imageFeatures.expandDims()).squeeze().data();imageFeatures.dispose();return predictionLabel;}throw new Error(\"Model not loaded\");}};export default MyModel;","map":{"version":3,"names":["tf","CLASS_NAMES","MyModel","featureExtractor","model","loadFeatureExtractor","_loadFeatureExtractor","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","wrap","_callee$","_context","prev","next","loadGraphModel","fromTFHub","sent","console","log","stop","apply","arguments","loadModel","sequential","add","layers","dense","inputShape","units","activation","length","compile","optimizer","loss","metrics","resetModel","preprocessImage","image","tensor","browser","fromPixels","resizeBilinear","div","expandDims","predict","squeeze","Error","trainModel","_trainModel","_callee2","images","labels","xs","ys","_callee2$","_context2","stack","map","oneHot","tensor1d","fit","epochs","shuffle","dispose","_x","_x2","predictImage","imageFeatures","predictionLabel","data"],"sources":["C:/Users/vince/OneDrive/Documents/GitHub/eleusia/src/components/AIModel.tsx"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\n\r\nconst CLASS_NAMES = [\"Refused\", \"Accepted\"]; // Put your class names here\r\n\r\nexport type ImageElement = HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageData;\r\n\r\nconst MyModel = {\r\n  featureExtractor: null as tf.GraphModel | null,\r\n  model: null as tf.Sequential | null,\r\n\r\n  loadFeatureExtractor: async () => {\r\n    const URL = 'https://tfhub.dev/google/tfjs-model/imagenet/mobilenet_v3_small_100_224/feature_vector/5/default/1';\r\n    MyModel.featureExtractor = await tf.loadGraphModel(URL, {fromTFHub: true});\r\n    console.log('Feature extractor loaded');\r\n  },\r\n\r\n  loadModel: () => {\r\n    MyModel.model = tf.sequential();\r\n    MyModel.model.add(tf.layers.dense({inputShape: [1024], units: 128, activation: 'relu'}));\r\n    MyModel.model.add(tf.layers.dense({units: CLASS_NAMES.length, activation: 'softmax'}));\r\n    MyModel.model.compile({\r\n      optimizer: 'adam',\r\n      loss: CLASS_NAMES.length === 2 ? 'binaryCrossentropy' : 'categoricalCrossentropy',\r\n      metrics: ['accuracy']\r\n    });\r\n    console.log('Model loaded');\r\n  },\r\n\r\n  resetModel: () => {\r\n    MyModel.loadModel();\r\n  },\r\n\r\n  preprocessImage: (image: ImageElement) => {\r\n    let tensor = tf.browser.fromPixels(image)\r\n      .resizeBilinear([224, 224])\r\n      .div(255.0)\r\n      .expandDims();\r\n    if (MyModel.featureExtractor) {\r\n      return (MyModel.featureExtractor.predict(tensor) as tf.Tensor).squeeze();\r\n    }\r\n    throw new Error(\"Feature extractor not loaded\");\r\n  },\r\n\r\n  trainModel: async (images: ImageElement[], labels: number[]) => {\r\n    const xs = tf.stack(images.map(image => MyModel.preprocessImage(image)));\r\n    const ys = tf.oneHot(tf.tensor1d(labels, 'int32'), CLASS_NAMES.length);\r\n    if (MyModel.model) {\r\n      await MyModel.model.fit(xs, ys, {\r\n        epochs: 10,\r\n        shuffle: true\r\n      });\r\n      xs.dispose();\r\n      ys.dispose();\r\n      console.log('Model trained');\r\n    } else {\r\n      throw new Error(\"Model not loaded\");\r\n    }\r\n  },\r\n\r\n  predictImage: (image: ImageElement) => {\r\n    const imageFeatures = MyModel.preprocessImage(image);\r\n    if (MyModel.model) {\r\n      const predictionLabel = (MyModel.model.predict(imageFeatures.expandDims()) as tf.Tensor).squeeze().data();\r\n      imageFeatures.dispose();\r\n      return predictionLabel;\r\n    }\r\n    throw new Error(\"Model not loaded\");\r\n  },\r\n};\r\n\r\nexport default MyModel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}