{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { square } from '../ops/square';\nimport { sum } from '../ops/sum';\nexport var divGradConfig = {\n  kernelName: RealDiv,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n      a = _saved[0],\n      b = _saved[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    var derA = function derA() {\n      var res = div(dy, cast(b, 'float32'));\n      var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), a.shape);\n      }\n      return res;\n    };\n    var derB = function derB() {\n      var res = mul(dy, cast(a, 'float32'));\n      var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = reshape(sum(res, reduceAxes), b.shape);\n      }\n      var tmp = square(b);\n      return neg(div(res, cast(tmp, 'float32')));\n    };\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["RealDiv","broadcast_util","cast","div","mul","neg","reshape","square","sum","divGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","_saved","_slicedToArray","a","b","outShape","assertAndGetBroadcastShape","shape","derA","res","reduceAxes","getReductionAxes","length","derB","tmp"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\RealDiv_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {RealDiv} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport {cast} from '../ops/cast';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {neg} from '../ops/neg';\nimport {reshape} from '../ops/reshape';\nimport {square} from '../ops/square';\nimport {sum} from '../ops/sum';\nimport {Tensor} from '../tensor';\n\nexport const divGradConfig: GradConfig = {\n  kernelName: RealDiv,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const outShape =\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const derA = () => {\n      const res = div(dy, cast(b, 'float32'));\n      const reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), a.shape);\n      }\n      return res;\n    };\n    const derB = () => {\n      let res = mul(dy, cast(a, 'float32'));\n      const reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = reshape(sum(res, reduceAxes), b.shape);\n      }\n      const tmp = square(b);\n      return neg(div(res, cast(tmp, 'float32')));\n    };\n    return {a: derA, b: derB};\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAO,iBAAiB;AAEvC,OAAO,KAAKC,cAAc,MAAM,uBAAuB;AACvD,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,IAAMC,aAAa,GAAe;EACvCC,UAAU,EAAEV,OAAO;EACnBW,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAI;IACxC,IAAAC,MAAA,GAAAC,cAAA,CAAeF,KAAK;MAAbG,CAAC,GAAAF,MAAA;MAAEG,CAAC,GAAAH,MAAA;IACX,IAAMI,QAAQ,GACVlB,cAAc,CAACmB,0BAA0B,CAACH,CAAC,CAACI,KAAK,EAAEH,CAAC,CAACG,KAAK,CAAC;IAC/D,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAQ;MAChB,IAAMC,GAAG,GAAGpB,GAAG,CAACU,EAAE,EAAEX,IAAI,CAACgB,CAAC,EAAE,SAAS,CAAC,CAAC;MACvC,IAAMM,UAAU,GAAGvB,cAAc,CAACwB,gBAAgB,CAACR,CAAC,CAACI,KAAK,EAAEF,QAAQ,CAAC;MACrE,IAAIK,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzB,OAAOpB,OAAO,CAACE,GAAG,CAACe,GAAG,EAAEC,UAAU,CAAC,EAAEP,CAAC,CAACI,KAAK,CAAC;;MAE/C,OAAOE,GAAG;IACZ,CAAC;IACD,IAAMI,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAQ;MAChB,IAAIJ,GAAG,GAAGnB,GAAG,CAACS,EAAE,EAAEX,IAAI,CAACe,CAAC,EAAE,SAAS,CAAC,CAAC;MACrC,IAAMO,UAAU,GAAGvB,cAAc,CAACwB,gBAAgB,CAACP,CAAC,CAACG,KAAK,EAAEF,QAAQ,CAAC;MACrE,IAAIK,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzBH,GAAG,GAAGjB,OAAO,CAACE,GAAG,CAACe,GAAG,EAAEC,UAAU,CAAC,EAAEN,CAAC,CAACG,KAAK,CAAC;;MAE9C,IAAMO,GAAG,GAAGrB,MAAM,CAACW,CAAC,CAAC;MACrB,OAAOb,GAAG,CAACF,GAAG,CAACoB,GAAG,EAAErB,IAAI,CAAC0B,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;IAC5C,CAAC;IACD,OAAO;MAACX,CAAC,EAAEK,IAAI;MAAEJ,CAAC,EAAES;IAAI,CAAC;EAC3B;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}