{"ast":null,"code":"import _createClass from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var SelectProgram = /*#__PURE__*/_createClass(function SelectProgram(cRank, shape, rank) {\n  _classCallCheck(this, SelectProgram);\n  this.variableNames = ['c', 'a', 'b'];\n  this.outputShape = shape;\n  var cCoords;\n  var abCoords;\n  if (rank > 4) {\n    throw Error(\"Where for rank \".concat(rank, \" is not yet supported\"));\n  }\n  if (rank === 1) {\n    abCoords = \"resRC\";\n    cCoords = \"resRC\";\n  } else {\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var cCoordVars = [];\n    var abCoordVars = [];\n    for (var i = 0; i < shape.length; i++) {\n      abCoordVars.push(\"\".concat(currentCoords[i]));\n      if (i < cRank) {\n        cCoordVars.push(\"\".concat(currentCoords[i]));\n      }\n    }\n    cCoords = cCoordVars.join();\n    abCoords = abCoordVars.join();\n  }\n  var dtype = getCoordsDataType(rank);\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        float cVal = getC(\").concat(cCoords, \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\").concat(abCoords, \"));\\n        } else {\\n          setOutput(getB(\").concat(abCoords, \"));\\n        }\\n      }\\n    \");\n});","map":{"version":3,"names":["getCoordsDataType","SelectProgram","_createClass","cRank","shape","rank","_classCallCheck","variableNames","outputShape","cCoords","abCoords","Error","concat","currentCoords","cCoordVars","abCoordVars","i","length","push","join","dtype","userCode"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\select_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class SelectProgram implements GPGPUProgram {\n  variableNames = ['c', 'a', 'b'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(cRank: number, shape: number[], rank: number) {\n    this.outputShape = shape;\n\n    let cCoords;\n    let abCoords;\n    if (rank > 4) {\n      throw Error(`Where for rank ${rank} is not yet supported`);\n    }\n\n    if (rank === 1) {\n      abCoords = `resRC`;\n      cCoords = `resRC`;\n    } else {\n      const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n      const cCoordVars = [];\n      const abCoordVars = [];\n      for (let i = 0; i < shape.length; i++) {\n        abCoordVars.push(`${currentCoords[i]}`);\n        if (i < cRank) {\n          cCoordVars.push(`${currentCoords[i]}`);\n        }\n      }\n      cCoords = cCoordVars.join();\n      abCoords = abCoordVars.join();\n    }\n\n    const dtype = getCoordsDataType(rank);\n\n    this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        float cVal = getC(${cCoords});\n        if (cVal >= 1.0) {\n          setOutput(getA(${abCoords}));\n        } else {\n          setOutput(getB(${abCoords}));\n        }\n      }\n    `;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,iBAAiB,QAAO,mBAAmB;AAEnD,WAAaC,aAAa,gBAAAC,YAAA,CAKxB,SAAAD,cAAYE,KAAa,EAAEC,KAAe,EAAEC,IAAY;EAAAC,eAAA,OAAAL,aAAA;EAJxD,KAAAM,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAK7B,IAAI,CAACC,WAAW,GAAGJ,KAAK;EAExB,IAAIK,OAAO;EACX,IAAIC,QAAQ;EACZ,IAAIL,IAAI,GAAG,CAAC,EAAE;IACZ,MAAMM,KAAK,mBAAAC,MAAA,CAAmBP,IAAI,2BAAwB;;EAG5D,IAAIA,IAAI,KAAK,CAAC,EAAE;IACdK,QAAQ,UAAU;IAClBD,OAAO,UAAU;GAClB,MAAM;IACL,IAAMI,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAClE,IAAMC,UAAU,GAAG,EAAE;IACrB,IAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCD,WAAW,CAACG,IAAI,IAAAN,MAAA,CAAIC,aAAa,CAACG,CAAC,CAAC,EAAG;MACvC,IAAIA,CAAC,GAAGb,KAAK,EAAE;QACbW,UAAU,CAACI,IAAI,IAAAN,MAAA,CAAIC,aAAa,CAACG,CAAC,CAAC,EAAG;;;IAG1CP,OAAO,GAAGK,UAAU,CAACK,IAAI,EAAE;IAC3BT,QAAQ,GAAGK,WAAW,CAACI,IAAI,EAAE;;EAG/B,IAAMC,KAAK,GAAGpB,iBAAiB,CAACK,IAAI,CAAC;EAErC,IAAI,CAACgB,QAAQ,qCAAAT,MAAA,CAEPQ,KAAK,6DAAAR,MAAA,CACaH,OAAO,+DAAAG,MAAA,CAERF,QAAQ,sDAAAE,MAAA,CAERF,QAAQ,kCAG9B;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}