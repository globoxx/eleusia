{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\r\n * Template that creates implementation for unary op.\r\n */\nexport function createSimpleUnaryImpl(op) {\n  return function (values, dtype, attrs) {\n    var newValues = util.getArrayFromDType(dtype, values.length);\n    for (var i = 0; i < values.length; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n    return newValues;\n  };\n}","map":{"version":3,"names":["util","createSimpleUnaryImpl","op","values","dtype","attrs","newValues","getArrayFromDType","length","i"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-cpu\\src\\utils\\unary_impl.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\nimport {SimpleUnaryImpl, SimpleUnaryOperation} from './unary_types';\n\n/**\n * Template that creates implementation for unary op.\n */\nexport function createSimpleUnaryImpl<I extends number | string = number,\n  O extends number | string = number>(op: SimpleUnaryOperation<I, O>):\n    SimpleUnaryImpl<I, O> {\n  return (values, dtype, attrs) => {\n    const newValues =\n        util.getArrayFromDType(dtype, values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n    return newValues;\n  };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,IAAI,QAAO,uBAAuB;AAI1C;;;AAGA,OAAM,SAAUC,qBAAqBA,CACCC,EAA8B;EAElE,OAAO,UAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAI;IAC9B,IAAMC,SAAS,GACXN,IAAI,CAACO,iBAAiB,CAACH,KAAK,EAAED,MAAM,CAACK,MAAM,CAAC;IAChD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACK,MAAM,EAAE,EAAEC,CAAC,EAAE;MACtCH,SAAS,CAACG,CAAC,CAAC,GAAGP,EAAE,CAACC,MAAM,CAACM,CAAC,CAAC,EAAEJ,KAAK,CAAC;;IAErC,OAAOC,SAAS;EAClB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}