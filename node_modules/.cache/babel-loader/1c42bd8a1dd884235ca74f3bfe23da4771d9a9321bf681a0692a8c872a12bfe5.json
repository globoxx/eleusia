{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import*as tf from'@tensorflow/tfjs';var MOBILE_NET_INPUT_WIDTH=224;var MOBILE_NET_INPUT_HEIGHT=224;var CLASS_NAMES=[\"Refused\",\"Accepted\"];// Put your class names here\nvar MyModel={featureExtractor:null,model:null,loadFeatureExtractor:function(){var _loadFeatureExtractor=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var URL;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:URL='https://www.kaggle.com/models/google/mobilenet-v3/TfJs/small-100-224-feature-vector/1';_context.next=3;return tf.loadGraphModel(URL,{fromTFHub:true});case 3:MyModel.featureExtractor=_context.sent;// Warm up the model by passing zeros through it once.\ntf.tidy(function(){MyModel.featureExtractor.predict(tf.zeros([1,MOBILE_NET_INPUT_HEIGHT,MOBILE_NET_INPUT_WIDTH,3]));});console.log('Feature extractor loaded');case 6:case\"end\":return _context.stop();}},_callee);}));function loadFeatureExtractor(){return _loadFeatureExtractor.apply(this,arguments);}return loadFeatureExtractor;}(),loadModel:function loadModel(){MyModel.model=tf.sequential();MyModel.model.add(tf.layers.dense({inputShape:[1024],units:128,activation:'relu'}));MyModel.model.add(tf.layers.dense({units:CLASS_NAMES.length,activation:'softmax'}));MyModel.model.compile({optimizer:'adam',loss:CLASS_NAMES.length===2?'binaryCrossentropy':'categoricalCrossentropy',metrics:['accuracy']});console.log('Model loaded');},resetModel:function resetModel(){MyModel.loadModel();},preprocessImage:function preprocessImage(image){return tf.tidy(function(){var tensor=tf.browser.fromPixels(image).resizeBilinear([MOBILE_NET_INPUT_HEIGHT,MOBILE_NET_INPUT_WIDTH],true).div(255.0).expandDims();if(MyModel.featureExtractor){return MyModel.featureExtractor.predict(tensor).squeeze();}throw new Error(\"Feature extractor not loaded\");});},trainModel:function(){var _trainModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(images,labels){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolve,reject){var xs,ys;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;xs=tf.stack(images.map(function(image){return MyModel.preprocessImage(image);}));ys=tf.oneHot(tf.tensor1d(labels,'int32'),CLASS_NAMES.length);if(!MyModel.model){_context2.next=10;break;}_context2.next=6;return MyModel.model.fit(xs,ys,{epochs:10,batchSize:5,shuffle:true});case 6:console.log('Model trained');resolve();_context2.next=11;break;case 10:reject(new Error(\"Model not loaded\"));case 11:_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);reject(_context2.t0);case 16:_context2.prev=16;if(xs)xs.dispose();if(ys)ys.dispose();return _context2.finish(16);case 20:case\"end\":return _context2.stop();}},_callee2,null,[[0,13,16,20]]);}));return function(_x3,_x4){return _ref.apply(this,arguments);};}()));case 1:case\"end\":return _context3.stop();}},_callee3);}));function trainModel(_x,_x2){return _trainModel.apply(this,arguments);}return trainModel;}(),predictImage:function predictImage(image){return new Promise(function(resolve,reject){var imageFeatures;try{imageFeatures=MyModel.preprocessImage(image);if(MyModel.model){var predictionLabel=MyModel.model.predict(imageFeatures.expandDims()).squeeze().dataSync();resolve(predictionLabel);}else{reject(new Error(\"Model not loaded\"));}}catch(error){reject(error);}finally{if(imageFeatures)imageFeatures.dispose();}});}};export default MyModel;","map":{"version":3,"names":["tf","MOBILE_NET_INPUT_WIDTH","MOBILE_NET_INPUT_HEIGHT","CLASS_NAMES","MyModel","featureExtractor","model","loadFeatureExtractor","_loadFeatureExtractor","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","wrap","_callee$","_context","prev","next","loadGraphModel","fromTFHub","sent","tidy","predict","zeros","console","log","stop","apply","arguments","loadModel","sequential","add","layers","dense","inputShape","units","activation","length","compile","optimizer","loss","metrics","resetModel","preprocessImage","image","tensor","browser","fromPixels","resizeBilinear","div","expandDims","squeeze","Error","trainModel","_trainModel","_callee3","images","labels","_callee3$","_context3","abrupt","Promise","_ref","_callee2","resolve","reject","xs","ys","_callee2$","_context2","stack","map","oneHot","tensor1d","fit","epochs","batchSize","shuffle","t0","dispose","finish","_x3","_x4","_x","_x2","predictImage","imageFeatures","predictionLabel","dataSync","error"],"sources":["C:/Users/vince/OneDrive/Documents/GitHub/eleusia/src/components/AIModel.tsx"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\n\r\nconst MOBILE_NET_INPUT_WIDTH = 224;\r\nconst MOBILE_NET_INPUT_HEIGHT = 224;\r\nconst CLASS_NAMES = [\"Refused\", \"Accepted\"]; // Put your class names here\r\n\r\nexport type ImageElement = HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageData;\r\n\r\nconst MyModel = {\r\n  featureExtractor: null as tf.GraphModel | null,\r\n  model: null as tf.Sequential | null,\r\n\r\n  loadFeatureExtractor: async () => {\r\n    const URL = 'https://www.kaggle.com/models/google/mobilenet-v3/TfJs/small-100-224-feature-vector/1';\r\n    MyModel.featureExtractor = await tf.loadGraphModel(URL, {fromTFHub: true});\r\n\r\n    // Warm up the model by passing zeros through it once.\r\n    tf.tidy(function () {\r\n      MyModel.featureExtractor.predict(tf.zeros([1, MOBILE_NET_INPUT_HEIGHT, MOBILE_NET_INPUT_WIDTH, 3]));\r\n    });\r\n\r\n    console.log('Feature extractor loaded');\r\n  },\r\n\r\n  loadModel: () => {\r\n    MyModel.model = tf.sequential();\r\n    MyModel.model.add(tf.layers.dense({inputShape: [1024], units: 128, activation: 'relu'}));\r\n    MyModel.model.add(tf.layers.dense({units: CLASS_NAMES.length, activation: 'softmax'}));\r\n    MyModel.model.compile({\r\n      optimizer: 'adam',\r\n      loss: CLASS_NAMES.length === 2 ? 'binaryCrossentropy' : 'categoricalCrossentropy',\r\n      metrics: ['accuracy']\r\n    });\r\n    console.log('Model loaded');\r\n  },\r\n\r\n  resetModel: () => {\r\n    MyModel.loadModel();\r\n  },\r\n\r\n  preprocessImage: (image: ImageElement) => {\r\n    return tf.tidy(() => {\r\n      let tensor = tf.browser.fromPixels(image)\r\n        .resizeBilinear([MOBILE_NET_INPUT_HEIGHT, MOBILE_NET_INPUT_WIDTH], true)\r\n        .div(255.0)\r\n        .expandDims();\r\n      if (MyModel.featureExtractor) {\r\n        return (MyModel.featureExtractor.predict(tensor) as tf.Tensor).squeeze();\r\n      }\r\n      throw new Error(\"Feature extractor not loaded\");\r\n    });\r\n  },\r\n\r\n  trainModel: async (images: ImageElement[], labels: number[]) => {\r\n    return new Promise<void>(async (resolve, reject) => {\r\n      let xs, ys\r\n      try {\r\n        xs = tf.stack(images.map(image => MyModel.preprocessImage(image)));\r\n        ys = tf.oneHot(tf.tensor1d(labels, 'int32'), CLASS_NAMES.length);\r\n        if (MyModel.model) {\r\n          await MyModel.model.fit(xs, ys, {\r\n            epochs: 10,\r\n            batchSize: 5,\r\n            shuffle: true\r\n          });\r\n          console.log('Model trained');\r\n          resolve();\r\n        } else {\r\n          reject(new Error(\"Model not loaded\"));\r\n        }\r\n      } catch(error) {\r\n        reject(error);\r\n      } finally {\r\n        if (xs) xs.dispose();\r\n        if (ys) ys.dispose();\r\n      }\r\n    });\r\n  },\r\n\r\n  predictImage: (image: ImageElement) => {\r\n    return new Promise<Uint8Array | Float32Array | Int32Array>((resolve, reject) => {\r\n      let imageFeatures\r\n      try {\r\n        imageFeatures = MyModel.preprocessImage(image);\r\n        if (MyModel.model) {\r\n          const predictionLabel = (MyModel.model.predict(imageFeatures.expandDims()) as tf.Tensor).squeeze().dataSync();\r\n          resolve(predictionLabel);\r\n        } else {\r\n          reject(new Error(\"Model not loaded\"));\r\n        }\r\n      } catch(error) {\r\n        reject(error);\r\n      } finally {\r\n        if (imageFeatures) imageFeatures.dispose();\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default MyModel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}