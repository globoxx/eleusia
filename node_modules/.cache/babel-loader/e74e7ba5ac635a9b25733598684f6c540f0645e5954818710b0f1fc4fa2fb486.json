{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { ResizeBilinear, ResizeBilinearGrad } from '../kernel_names';\nexport var resizeBilinearGradConfig = {\n  kernelName: ResizeBilinear,\n  inputsToSave: ['images'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n      images = _saved[0];\n    var inputs = {\n      dy: dy,\n      images: images\n    };\n    var imagesDer = function imagesDer() {\n      return (\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        ENGINE.runKernel(ResizeBilinearGrad, inputs, attrs)\n      );\n    };\n    return {\n      images: imagesDer\n    };\n  }\n};","map":{"version":3,"names":["ENGINE","ResizeBilinear","ResizeBilinearGrad","resizeBilinearGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","_saved","_slicedToArray","images","inputs","imagesDer","runKernel"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\ResizeBilinear_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {ResizeBilinear, ResizeBilinearGrad, ResizeBilinearGradInputs} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nexport const resizeBilinearGradConfig: GradConfig = {\n  kernelName: ResizeBilinear,\n  inputsToSave: ['images'],\n  gradFunc: (dy: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [images] = saved;\n\n    const inputs: ResizeBilinearGradInputs = {dy, images};\n    const imagesDer = () =>\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        ENGINE.runKernel(\n            ResizeBilinearGrad, inputs as unknown as NamedTensorMap, attrs) as\n        Tensor4D;\n\n    return {images: imagesDer};\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,cAAc,EAAEC,kBAAkB,QAAiC,iBAAiB;AAM5F,OAAO,IAAMC,wBAAwB,GAAe;EAClDC,UAAU,EAAEH,cAAc;EAC1BI,YAAY,EAAE,CAAC,QAAQ,CAAC;EACxBC,QAAQ,EAAE,SAAAA,SAACC,EAAY,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC/D,IAAAC,MAAA,GAAAC,cAAA,CAAiBH,KAAK;MAAfI,MAAM,GAAAF,MAAA;IAEb,IAAMG,MAAM,GAA6B;MAACN,EAAE,EAAFA,EAAE;MAAEK,MAAM,EAANA;IAAM,CAAC;IACrD,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAA;MAAA;QACX;QACAd,MAAM,CAACe,SAAS,CACZb,kBAAkB,EAAEW,MAAmC,EAAEJ,KAAK;MAC1D;IAAA;IAEZ,OAAO;MAACG,MAAM,EAAEE;IAAS,CAAC;EAC5B;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}