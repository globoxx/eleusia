{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxPoolWithArgmaxImpl } from './MaxPoolWithArgmax_impl';\nexport var maxPoolWithArgmaxConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n      attrs = _ref.attrs,\n      backend = _ref.backend;\n    var x = inputs.x;\n    var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      includeBatchInIndex = attrs.includeBatchInIndex;\n    var webglBackend = backend;\n    util.assert(x.shape.length === 4, function () {\n      return \"Error in maxPool: input must be rank 4 but got rank \".concat(x.shape.length, \".\");\n    });\n    var dilations = [1, 1];\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n      return 'Error in maxPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n    });\n    var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n    var _maxPoolWithArgmaxImp = maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend),\n      _maxPoolWithArgmaxImp2 = _slicedToArray(_maxPoolWithArgmaxImp, 2),\n      result = _maxPoolWithArgmaxImp2[0],\n      indexes = _maxPoolWithArgmaxImp2[1];\n    return [result, indexes];\n  }\n};","map":{"version":3,"names":["MaxPoolWithArgmax","backend_util","util","maxPoolWithArgmaxImpl","maxPoolWithArgmaxConfig","kernelName","backendName","kernelFunc","_ref","inputs","attrs","backend","x","filterSize","strides","pad","includeBatchInIndex","webglBackend","assert","shape","length","concat","dilations","eitherStridesOrDilationsAreOne","convInfo","computePool2DInfo","_maxPoolWithArgmaxImp","_maxPoolWithArgmaxImp2","_slicedToArray","result","indexes"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-backend-webgl\\src\\kernels\\MaxPoolWithArgmax.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {MaxPoolWithArgmax, MaxPoolWithArgmaxAttrs, MaxPoolWithArgmaxInputs} from '@tensorflow/tfjs-core';\nimport {backend_util, KernelConfig, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nimport {maxPoolWithArgmaxImpl} from './MaxPoolWithArgmax_impl';\n\nexport const maxPoolWithArgmaxConfig: KernelConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'webgl',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {x} = inputs as MaxPoolWithArgmaxInputs;\n    const {filterSize, strides, pad, includeBatchInIndex} =\n        attrs as unknown as MaxPoolWithArgmaxAttrs;\n    const webglBackend = backend as MathBackendWebGL;\n\n    util.assert(\n        x.shape.length === 4,\n        () => `Error in maxPool: input must be rank 4 but got rank ${\n            x.shape.length}.`);\n    const dilations: [number, number] = [1, 1];\n    util.assert(\n        backend_util.eitherStridesOrDilationsAreOne(strides, dilations),\n        () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n            `Got strides ${strides} and dilations '${dilations}'`);\n\n    const convInfo = backend_util.computePool2DInfo(\n        x.shape as [number, number, number, number], filterSize, strides,\n        dilations, pad);\n\n    const [result, indexes] =\n        maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend);\n    return [result, indexes];\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,iBAAiB,QAAwD,uBAAuB;AACxG,SAAQC,YAAY,EAAgBC,IAAI,QAAO,uBAAuB;AAItE,SAAQC,qBAAqB,QAAO,0BAA0B;AAE9D,OAAO,IAAMC,uBAAuB,GAAiB;EACnDC,UAAU,EAAEL,iBAAiB;EAC7BM,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE,SAAAA,WAAAC,IAAA,EAA6B;IAAA,IAA3BC,MAAM,GAAAD,IAAA,CAANC,MAAM;MAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;MAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAClC,IAAOC,CAAC,GAAIH,MAAiC,CAAtCG,CAAC;IACR,IAAOC,UAAU,GACbH,KAA0C,CADvCG,UAAU;MAAEC,OAAO,GACtBJ,KAA0C,CAD3BI,OAAO;MAAEC,GAAG,GAC3BL,KAA0C,CADlBK,GAAG;MAAEC,mBAAmB,GAChDN,KAA0C,CADbM,mBAAmB;IAEpD,IAAMC,YAAY,GAAGN,OAA2B;IAEhDT,IAAI,CAACgB,MAAM,CACPN,CAAC,CAACO,KAAK,CAACC,MAAM,KAAK,CAAC,EACpB;MAAA,8DAAAC,MAAA,CACIT,CAAC,CAACO,KAAK,CAACC,MAAM;IAAA,CAAG,CAAC;IAC1B,IAAME,SAAS,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1CpB,IAAI,CAACgB,MAAM,CACPjB,YAAY,CAACsB,8BAA8B,CAACT,OAAO,EAAEQ,SAAS,CAAC,EAC/D;MAAA,OAAM,2DAA2D,kBAAAD,MAAA,CAC9CP,OAAO,sBAAAO,MAAA,CAAmBC,SAAS,MAAG;IAAA,EAAC;IAE9D,IAAME,QAAQ,GAAGvB,YAAY,CAACwB,iBAAiB,CAC3Cb,CAAC,CAACO,KAAyC,EAAEN,UAAU,EAAEC,OAAO,EAChEQ,SAAS,EAAEP,GAAG,CAAC;IAEnB,IAAAW,qBAAA,GACIvB,qBAAqB,CAACS,CAAC,EAAEI,mBAAmB,EAAEQ,QAAQ,EAAEP,YAAY,CAAC;MAAAU,sBAAA,GAAAC,cAAA,CAAAF,qBAAA;MADlEG,MAAM,GAAAF,sBAAA;MAAEG,OAAO,GAAAH,sBAAA;IAEtB,OAAO,CAACE,MAAM,EAAEC,OAAO,CAAC;EAC1B;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}