{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Reciprocal } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes reciprocal of x element-wise: `1 / x`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, 1, 2]);\r\n *\r\n * x.reciprocal().print();  // or tf.reciprocal(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\nfunction reciprocal_(x) {\n  var $x = convertToTensor(x, 'x', 'reciprocal');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Reciprocal, inputs);\n}\nexport var reciprocal = /* @__PURE__ */op({\n  reciprocal_: reciprocal_\n});","map":{"version":3,"names":["ENGINE","Reciprocal","convertToTensor","op","reciprocal_","x","$x","inputs","runKernel","reciprocal"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\ops\\reciprocal.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reciprocal, ReciprocalInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction reciprocal_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'reciprocal');\n\n  const inputs: ReciprocalInputs = {x: $x};\n  return ENGINE.runKernel(Reciprocal, inputs as unknown as NamedTensorMap);\n}\nexport const reciprocal = /* @__PURE__ */ op({reciprocal_});\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,UAAU,QAAyB,iBAAiB;AAG5D,SAAQC,eAAe,QAAO,oBAAoB;AAGlD,SAAQC,EAAE,QAAO,aAAa;AAE9B;;;;;;;;;;;;AAYA,SAASC,WAAWA,CAAmBC,CAAe;EACpD,IAAMC,EAAE,GAAGJ,eAAe,CAACG,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC;EAEhD,IAAME,MAAM,GAAqB;IAACF,CAAC,EAAEC;EAAE,CAAC;EACxC,OAAON,MAAM,CAACQ,SAAS,CAACP,UAAU,EAAEM,MAAmC,CAAC;AAC1E;AACA,OAAO,IAAME,UAAU,GAAG,eAAgBN,EAAE,CAAC;EAACC,WAAW,EAAXA;AAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}