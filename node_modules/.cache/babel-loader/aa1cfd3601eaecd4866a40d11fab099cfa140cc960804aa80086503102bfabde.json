{"ast":null,"code":"import _slicedToArray from \"C:/Users/vince/OneDrive/Documents/GitHub/eleusia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { MaxPool3D } from '../kernel_names';\nimport { maxPool3dGrad } from '../ops/max_pool_3d_grad';\nexport var maxPool3DGradConfig = {\n  kernelName: MaxPool3D,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n      _x = _saved[0],\n      y = _saved[1];\n    var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      x: function x() {\n        return maxPool3dGrad(dy, _x, y, filterSize, strides, pad, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"names":["MaxPool3D","maxPool3dGrad","maxPool3DGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","_saved","_slicedToArray","x","y","filterSize","strides","pad","dimRoundingMode"],"sources":["C:\\Users\\vince\\OneDrive\\Documents\\GitHub\\tfjs-core\\src\\gradients\\MaxPool3D_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {MaxPool3D, MaxPool3DAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {maxPool3dGrad} from '../ops/max_pool_3d_grad';\nimport {Tensor, Tensor5D} from '../tensor';\n\nexport const maxPool3DGradConfig: GradConfig = {\n  kernelName: MaxPool3D,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x, y] = saved as [Tensor5D, Tensor5D];\n    const {filterSize, strides, pad, dimRoundingMode} =\n        attrs as unknown as MaxPool3DAttrs;\n\n    return {\n      x: () => maxPool3dGrad(\n          dy as Tensor5D, x, y, filterSize, strides, pad, dimRoundingMode)\n    };\n  }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,SAAS,QAAuB,iBAAiB;AAEzD,SAAQC,aAAa,QAAO,yBAAyB;AAGrD,OAAO,IAAMC,mBAAmB,GAAe;EAC7CC,UAAU,EAAEH,SAAS;EACrBI,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,QAAQ,EAAE,SAAAA,SAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,IAAAC,MAAA,GAAAC,cAAA,CAAeH,KAA6B;MAArCI,EAAC,GAAAF,MAAA;MAAEG,CAAC,GAAAH,MAAA;IACX,IAAOI,UAAU,GACbL,KAAkC,CAD/BK,UAAU;MAAEC,OAAO,GACtBN,KAAkC,CADnBM,OAAO;MAAEC,GAAG,GAC3BP,KAAkC,CADVO,GAAG;MAAEC,eAAe,GAC5CR,KAAkC,CADLQ,eAAe;IAGhD,OAAO;MACLL,CAAC,EAAE,SAAAA,EAAA;QAAA,OAAMX,aAAa,CAClBM,EAAc,EAAEK,EAAC,EAAEC,CAAC,EAAEC,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAEC,eAAe,CAAC;MAAA;KACrE;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}